{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1kO6HIdmwUwZnBkiRswTXuKPAFZ2KkVc3","authorship_tag":"ABX9TyMkqRArF5tDr0LCiUk3fETt"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"-jUIWPu1fooB"},"outputs":[],"source":["'''\n","we are going to download the recettes from here https://github.com/lingcheng99/Flavor-Network/tree/master/data\n","and may the odds be ever in our \"flavor\" jejejeje\n","'''"]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","from nltk.stem import WordNetLemmatizer\n","from nltk.stem.snowball import SnowballStemmer\n","from nltk.tokenize import word_tokenize\n","import re\n","# import cPickle as pickle\n","import pickle\n","import itertools\n","from collections import Counter"],"metadata":{"id":"CSeC3c--iIdW","executionInfo":{"status":"ok","timestamp":1678637619543,"user_tz":-60,"elapsed":13,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["yummly_data=pd.read_pickle('/content/drive/Shareddrives/MLNS/Project/Codes/Data/yummly.pkl')\n","# yummly_data\n","# let's eliminate the Unnamed\n","def elim_Unnamed(the_df):\n","    cols_to_drop = [col for col in the_df.columns if col.startswith('Unnamed:')]\n","    the_df=the_df.drop(cols_to_drop, axis=1)\n","    return the_df \n","yummly_data=elim_Unnamed(yummly_data)\n","yummly_data.head()\n","# print(yummly_data.info)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"R0Nbz7nhiIoV","executionInfo":{"status":"ok","timestamp":1678641500700,"user_tz":-60,"elapsed":362,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"72df92a5-5bb2-4942-fba9-2df4011bb3c7"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        id                        recipeName  \\\n","0      Southern-Cornbread-Dressing-1357820       Southern Cornbread Dressing   \n","1               Peanut-butter-fudge-297693               Peanut Butter Fudge   \n","2                          Buckeyes-298471                          Buckeyes   \n","3  Disappearing-buffalo-chicken-dip-297712  Disappearing Buffalo Chicken Dip   \n","4            Classic-macaroni-salad-304692            Classic Macaroni Salad   \n","\n","   rating  totalTimeInSeconds                 course                 cuisine  \\\n","0       4              3600.0                    NaN  [Southern & Soul Food]   \n","1       4              8100.0             [Desserts]              [American]   \n","2       4              6600.0             [Desserts]              [American]   \n","3       4              2100.0           [Appetizers]              [American]   \n","4       4              1500.0  [Salads, Side Dishes]              [American]   \n","\n","                                         ingredients  \n","0  [buttermilk cornbread, sandwich bread, salt, b...  \n","1  [Country CrockÂ® Spread, light corn syrup, cre...  \n","2  [SkippyÂ® Super ChunkÂ® Peanut Butter, Country...  \n","3  [light mayonnaise, lemon juice, cayenne pepper...  \n","4  [elbow macaroni, hellmann' or best food real m...  "],"text/html":["\n","  <div id=\"df-14b82695-526a-469d-8e3a-2b297dcd7d89\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>recipeName</th>\n","      <th>rating</th>\n","      <th>totalTimeInSeconds</th>\n","      <th>course</th>\n","      <th>cuisine</th>\n","      <th>ingredients</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Southern-Cornbread-Dressing-1357820</td>\n","      <td>Southern Cornbread Dressing</td>\n","      <td>4</td>\n","      <td>3600.0</td>\n","      <td>NaN</td>\n","      <td>[Southern &amp; Soul Food]</td>\n","      <td>[buttermilk cornbread, sandwich bread, salt, b...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Peanut-butter-fudge-297693</td>\n","      <td>Peanut Butter Fudge</td>\n","      <td>4</td>\n","      <td>8100.0</td>\n","      <td>[Desserts]</td>\n","      <td>[American]</td>\n","      <td>[Country CrockÂ® Spread, light corn syrup, cre...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Buckeyes-298471</td>\n","      <td>Buckeyes</td>\n","      <td>4</td>\n","      <td>6600.0</td>\n","      <td>[Desserts]</td>\n","      <td>[American]</td>\n","      <td>[SkippyÂ® Super ChunkÂ® Peanut Butter, Country...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Disappearing-buffalo-chicken-dip-297712</td>\n","      <td>Disappearing Buffalo Chicken Dip</td>\n","      <td>4</td>\n","      <td>2100.0</td>\n","      <td>[Appetizers]</td>\n","      <td>[American]</td>\n","      <td>[light mayonnaise, lemon juice, cayenne pepper...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Classic-macaroni-salad-304692</td>\n","      <td>Classic Macaroni Salad</td>\n","      <td>4</td>\n","      <td>1500.0</td>\n","      <td>[Salads, Side Dishes]</td>\n","      <td>[American]</td>\n","      <td>[elbow macaroni, hellmann' or best food real m...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-14b82695-526a-469d-8e3a-2b297dcd7d89')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-14b82695-526a-469d-8e3a-2b297dcd7d89 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-14b82695-526a-469d-8e3a-2b297dcd7d89');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["yummly_data.info\n","# this is like............soooooooooooo helpful..............\n","'''\n","This is what we are doing:\n","1. Check the ratings (how manu recipes we have per rating)\n","2. How many courses -> eliminate NaN\n","3. Clean the ingredients\n","'''"],"metadata":{"id":"yom32t7UiIrC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# ratings\n","yummly_data.hist(column='rating')\n","# we don't have NaN's yaaay, but most recipes live between 4 and 5\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":298},"id":"BWzeKpCZiIuC","executionInfo":{"status":"ok","timestamp":1678639152249,"user_tz":-60,"elapsed":315,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"075f2655-7b81-4b58-8251-afeb2698dcae"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<AxesSubplot:title={'center':'rating'}>]], dtype=object)"]},"metadata":{},"execution_count":9},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["yummly_data.groupby('rating')['id'].count()\n","# this is the distribution"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aj8tQ75FsbjB","executionInfo":{"status":"ok","timestamp":1678639249777,"user_tz":-60,"elapsed":12,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"c1b5f743-1faa-4f53-e942-f717bb29c1e0"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["rating\n","0     114\n","1       3\n","2      45\n","3    1613\n","4    5387\n","5    1502\n","Name: id, dtype: int64"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["yummly_data.groupby('course')['id'].count().reset_index(drop=True)\n","# there are 500 recipes that don't have course assigned.....later on I'll check on them\n","# pffff..............."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":289},"id":"_9OZ4kaass8G","executionInfo":{"status":"ok","timestamp":1678640386923,"user_tz":-60,"elapsed":19,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"8371f3f6-931c-42ee-e2b6-a527f2bece95"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                          course   id\n","0                        [Afternoon Tea, Breads]    4\n","1    [Afternoon Tea, Desserts, Lunch and Snacks]    1\n","2                      [Afternoon Tea, Desserts]   11\n","3              [Afternoon Tea, Lunch and Snacks]    1\n","4              [Appetizers, Breads, Side Dishes]    2\n","..                                           ...  ...\n","103                        [Side Dishes, Salads]   21\n","104                                [Side Dishes]  435\n","105                         [Soups, Main Dishes]   44\n","106                                      [Soups]  455\n","107                                           []  500\n","\n","[108 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-3c380b99-3429-439a-8ae2-ffac2c349a96\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>course</th>\n","      <th>id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>[Afternoon Tea, Breads]</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>[Afternoon Tea, Desserts, Lunch and Snacks]</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>[Afternoon Tea, Desserts]</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>[Afternoon Tea, Lunch and Snacks]</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>[Appetizers, Breads, Side Dishes]</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>103</th>\n","      <td>[Side Dishes, Salads]</td>\n","      <td>21</td>\n","    </tr>\n","    <tr>\n","      <th>104</th>\n","      <td>[Side Dishes]</td>\n","      <td>435</td>\n","    </tr>\n","    <tr>\n","      <th>105</th>\n","      <td>[Soups, Main Dishes]</td>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>106</th>\n","      <td>[Soups]</td>\n","      <td>455</td>\n","    </tr>\n","    <tr>\n","      <th>107</th>\n","      <td>[]</td>\n","      <td>500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>108 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c380b99-3429-439a-8ae2-ffac2c349a96')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3c380b99-3429-439a-8ae2-ffac2c349a96 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3c380b99-3429-439a-8ae2-ffac2c349a96');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# let's see if the id is unique, perhaps we have things duplicated jeje\n","len(yummly_data)\n","# eliminate duplicates\n","yummly_data=yummly_data.drop_duplicates(['id'], keep='first').reset_index(drop=True)\n","len(yummly_data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UN2MnoQ0stAR","executionInfo":{"status":"ok","timestamp":1678641550089,"user_tz":-60,"elapsed":13,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"80a3ac43-d2ec-4200-c751-9db93dffab8e"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8037"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["# eliminate the []\n","yummly_data['cuisine']=yummly_data['cuisine'].apply(lambda x: x.strip('[]')).reset_index(drop=True)"],"metadata":{"id":"bZ8PP8erstUX","executionInfo":{"status":"ok","timestamp":1678641573247,"user_tz":-60,"elapsed":222,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["yummly_data.groupby('cuisine')['id'].count().reset_index()\n","# we are going to do some changes to the cuisine classification"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":655},"id":"lMj7_jKOstEB","executionInfo":{"status":"ok","timestamp":1678641131912,"user_tz":-60,"elapsed":20,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"e6630b66-3155-4c87-8949-f171242c44b4"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                       cuisine   id\n","0                                     American  532\n","1                              American, Asian    5\n","2                           American, Barbecue    1\n","3    American, Barbecue, Mexican, Southwestern    1\n","4                     American, Cajun & Creole   14\n","..                                         ...  ...\n","201                      Thai, American, Asian    3\n","202                                Thai, Asian  279\n","203               Thai, Chinese, Indian, Asian    1\n","204                        Thai, Indian, Asian    1\n","205                         Thai, Kid-Friendly    2\n","\n","[206 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-03cb2d1d-b794-43c8-889e-d81bb037d8ef\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>cuisine</th>\n","      <th>id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>American</td>\n","      <td>532</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>American, Asian</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>American, Barbecue</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>American, Barbecue, Mexican, Southwestern</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>American, Cajun &amp; Creole</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>201</th>\n","      <td>Thai, American, Asian</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>202</th>\n","      <td>Thai, Asian</td>\n","      <td>279</td>\n","    </tr>\n","    <tr>\n","      <th>203</th>\n","      <td>Thai, Chinese, Indian, Asian</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>204</th>\n","      <td>Thai, Indian, Asian</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>205</th>\n","      <td>Thai, Kid-Friendly</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>206 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-03cb2d1d-b794-43c8-889e-d81bb037d8ef')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-03cb2d1d-b794-43c8-889e-d81bb037d8ef button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-03cb2d1d-b794-43c8-889e-d81bb037d8ef');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["cuisine_dic = {'Thai, Asian': 'Thai', 'Chinese, Asian':'Chinese', 'Japanese, Asian':'Japanese',\n","  'Southern & Soul Food, American': 'Southern & Soul Food',\n","  'Mediterranean, Greek': 'Mediterranean',\n","  'Cajun & Creole, Southern & Soul Food, American': 'Southern & Soul Food',\n","  'Asian, Japanese': 'Japanese','Cajun & Creole, American': 'Cajun & Creole',\n","  'Hawaiian, American': 'Hawaiian', 'Asian, Thai': 'Thai', 'American, Cuban':'Cuban',\n","  'Greek, Mediterranean': 'Greek', 'Indian, Asian': 'Indian','Asian, Chinese':'Chinese',\n","  'American, Kid-Friendly': 'American', 'Spanish, Portuguese':'Spanish',\n","  'Mexican, Southwestern': 'Mexican', 'Southwestern, Mexican': 'Southwestern',\n","  'American, Southern & Soul Food': 'Southern & Soul Food',\n","  'Cajun & Creole, Southern & Soul Food': 'Southern & Soul Food',\n","  'Portuguese, American':'American','American, French': 'American',\n","  'American, Cajun & Creole':'American',\n","  'American, Cajun & Creole, Southern & Soul Food': 'American',\n","  'Irish, American':'American'\n","    }\n","\n","yummly_data['cuisine2'] = yummly_data['cuisine'].apply(lambda x: cuisine_dic[x] if x in cuisine_dic else x).reset_index(drop=True)\n","yummly_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":780},"id":"ZeycGs4vstXw","executionInfo":{"status":"ok","timestamp":1678641963222,"user_tz":-60,"elapsed":21,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"85222793-63b0-4624-85b0-b065f3b05de9"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                    id  \\\n","0                  Southern-Cornbread-Dressing-1357820   \n","1                           Peanut-butter-fudge-297693   \n","2                                      Buckeyes-298471   \n","3              Disappearing-buffalo-chicken-dip-297712   \n","4                        Classic-macaroni-salad-304692   \n","...                                                ...   \n","8032                  Thai-Style-Broiled-Shrimp-779084   \n","8033                      Pad-Thai-French-Fries-984208   \n","8034                Spicy-Thai-Lobster-Soup-My-Recipes   \n","8035         Thai-Green-Papaya-Salad-_Som-Tam_-1266284   \n","8036  Thai-Salad-with-Peanut-Dressing-MyRecipes-213423   \n","\n","                             recipeName  rating  totalTimeInSeconds  \\\n","0           Southern Cornbread Dressing       4              3600.0   \n","1                   Peanut Butter Fudge       4              8100.0   \n","2                              Buckeyes       4              6600.0   \n","3      Disappearing Buffalo Chicken Dip       4              2100.0   \n","4                Classic Macaroni Salad       4              1500.0   \n","...                                 ...     ...                 ...   \n","8032          Thai-Style Broiled Shrimp       3               600.0   \n","8033              Pad Thai French Fries       4              1800.0   \n","8034            Spicy Thai Lobster Soup       4              3300.0   \n","8035  Thai Green Papaya Salad (Som Tam)       4              1200.0   \n","8036    Thai Salad with Peanut Dressing       4               900.0   \n","\n","                     course               cuisine  \\\n","0                       NaN  Southern & Soul Food   \n","1                [Desserts]              American   \n","2                [Desserts]              American   \n","3              [Appetizers]              American   \n","4     [Salads, Side Dishes]              American   \n","...                     ...                   ...   \n","8032                    NaN                  Thai   \n","8033                    NaN                  Thai   \n","8034   [Main Dishes, Soups]           Asian, Thai   \n","8035          [Main Dishes]        Barbecue, Thai   \n","8036               [Salads]                  Thai   \n","\n","                                            ingredients              cuisine2  \n","0     [buttermilk cornbread, sandwich bread, salt, b...  Southern & Soul Food  \n","1     [Country CrockÂ® Spread, light corn syrup, cre...              American  \n","2     [SkippyÂ® Super ChunkÂ® Peanut Butter, Country...              American  \n","3     [light mayonnaise, lemon juice, cayenne pepper...              American  \n","4     [elbow macaroni, hellmann' or best food real m...              American  \n","...                                                 ...                   ...  \n","8032  [garlic cloves, thai chile, salt, sugar, fish ...                  Thai  \n","8033  [sauce, fish sauce, cilantro, lime, peanuts, c...                  Thai  \n","8034  [lobster, vegetable oil, asian, fish, lime rin...                  Thai  \n","8035  [fresh lime juice, palm sugar, fish sauce, gar...        Barbecue, Thai  \n","8036  [water, rice vinegar, green onions, reduced fa...                  Thai  \n","\n","[8037 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-f40ad04c-d481-45cd-bcae-4b76aeaecd3f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>recipeName</th>\n","      <th>rating</th>\n","      <th>totalTimeInSeconds</th>\n","      <th>course</th>\n","      <th>cuisine</th>\n","      <th>ingredients</th>\n","      <th>cuisine2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Southern-Cornbread-Dressing-1357820</td>\n","      <td>Southern Cornbread Dressing</td>\n","      <td>4</td>\n","      <td>3600.0</td>\n","      <td>NaN</td>\n","      <td>Southern &amp; Soul Food</td>\n","      <td>[buttermilk cornbread, sandwich bread, salt, b...</td>\n","      <td>Southern &amp; Soul Food</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Peanut-butter-fudge-297693</td>\n","      <td>Peanut Butter Fudge</td>\n","      <td>4</td>\n","      <td>8100.0</td>\n","      <td>[Desserts]</td>\n","      <td>American</td>\n","      <td>[Country CrockÂ® Spread, light corn syrup, cre...</td>\n","      <td>American</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Buckeyes-298471</td>\n","      <td>Buckeyes</td>\n","      <td>4</td>\n","      <td>6600.0</td>\n","      <td>[Desserts]</td>\n","      <td>American</td>\n","      <td>[SkippyÂ® Super ChunkÂ® Peanut Butter, Country...</td>\n","      <td>American</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Disappearing-buffalo-chicken-dip-297712</td>\n","      <td>Disappearing Buffalo Chicken Dip</td>\n","      <td>4</td>\n","      <td>2100.0</td>\n","      <td>[Appetizers]</td>\n","      <td>American</td>\n","      <td>[light mayonnaise, lemon juice, cayenne pepper...</td>\n","      <td>American</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Classic-macaroni-salad-304692</td>\n","      <td>Classic Macaroni Salad</td>\n","      <td>4</td>\n","      <td>1500.0</td>\n","      <td>[Salads, Side Dishes]</td>\n","      <td>American</td>\n","      <td>[elbow macaroni, hellmann' or best food real m...</td>\n","      <td>American</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8032</th>\n","      <td>Thai-Style-Broiled-Shrimp-779084</td>\n","      <td>Thai-Style Broiled Shrimp</td>\n","      <td>3</td>\n","      <td>600.0</td>\n","      <td>NaN</td>\n","      <td>Thai</td>\n","      <td>[garlic cloves, thai chile, salt, sugar, fish ...</td>\n","      <td>Thai</td>\n","    </tr>\n","    <tr>\n","      <th>8033</th>\n","      <td>Pad-Thai-French-Fries-984208</td>\n","      <td>Pad Thai French Fries</td>\n","      <td>4</td>\n","      <td>1800.0</td>\n","      <td>NaN</td>\n","      <td>Thai</td>\n","      <td>[sauce, fish sauce, cilantro, lime, peanuts, c...</td>\n","      <td>Thai</td>\n","    </tr>\n","    <tr>\n","      <th>8034</th>\n","      <td>Spicy-Thai-Lobster-Soup-My-Recipes</td>\n","      <td>Spicy Thai Lobster Soup</td>\n","      <td>4</td>\n","      <td>3300.0</td>\n","      <td>[Main Dishes, Soups]</td>\n","      <td>Asian, Thai</td>\n","      <td>[lobster, vegetable oil, asian, fish, lime rin...</td>\n","      <td>Thai</td>\n","    </tr>\n","    <tr>\n","      <th>8035</th>\n","      <td>Thai-Green-Papaya-Salad-_Som-Tam_-1266284</td>\n","      <td>Thai Green Papaya Salad (Som Tam)</td>\n","      <td>4</td>\n","      <td>1200.0</td>\n","      <td>[Main Dishes]</td>\n","      <td>Barbecue, Thai</td>\n","      <td>[fresh lime juice, palm sugar, fish sauce, gar...</td>\n","      <td>Barbecue, Thai</td>\n","    </tr>\n","    <tr>\n","      <th>8036</th>\n","      <td>Thai-Salad-with-Peanut-Dressing-MyRecipes-213423</td>\n","      <td>Thai Salad with Peanut Dressing</td>\n","      <td>4</td>\n","      <td>900.0</td>\n","      <td>[Salads]</td>\n","      <td>Thai</td>\n","      <td>[water, rice vinegar, green onions, reduced fa...</td>\n","      <td>Thai</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8037 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f40ad04c-d481-45cd-bcae-4b76aeaecd3f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f40ad04c-d481-45cd-bcae-4b76aeaecd3f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f40ad04c-d481-45cd-bcae-4b76aeaecd3f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["yummly_data.groupby(['cuisine','cuisine2'])['id'].count().reset_index()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":246},"id":"tks835Yr0i9T","executionInfo":{"status":"ok","timestamp":1678642018823,"user_tz":-60,"elapsed":439,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"7c8d204f-67b4-4ec3-dadf-dc7d1d6f1d79"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                       cuisine  \\\n","0                                     American   \n","1                              American, Asian   \n","2                           American, Barbecue   \n","3    American, Barbecue, Mexican, Southwestern   \n","4                     American, Cajun & Creole   \n","..                                         ...   \n","201                      Thai, American, Asian   \n","202                                Thai, Asian   \n","203               Thai, Chinese, Indian, Asian   \n","204                        Thai, Indian, Asian   \n","205                         Thai, Kid-Friendly   \n","\n","                                      cuisine2   id  \n","0                                     American  532  \n","1                              American, Asian    5  \n","2                           American, Barbecue    1  \n","3    American, Barbecue, Mexican, Southwestern    1  \n","4                                     American   14  \n","..                                         ...  ...  \n","201                      Thai, American, Asian    3  \n","202                                       Thai  279  \n","203               Thai, Chinese, Indian, Asian    1  \n","204                        Thai, Indian, Asian    1  \n","205                         Thai, Kid-Friendly    2  \n","\n","[206 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-c26eeb3c-0793-4a98-ba63-428ead90d43a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>cuisine</th>\n","      <th>cuisine2</th>\n","      <th>id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>American</td>\n","      <td>American</td>\n","      <td>532</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>American, Asian</td>\n","      <td>American, Asian</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>American, Barbecue</td>\n","      <td>American, Barbecue</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>American, Barbecue, Mexican, Southwestern</td>\n","      <td>American, Barbecue, Mexican, Southwestern</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>American, Cajun &amp; Creole</td>\n","      <td>American</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>201</th>\n","      <td>Thai, American, Asian</td>\n","      <td>Thai, American, Asian</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>202</th>\n","      <td>Thai, Asian</td>\n","      <td>Thai</td>\n","      <td>279</td>\n","    </tr>\n","    <tr>\n","      <th>203</th>\n","      <td>Thai, Chinese, Indian, Asian</td>\n","      <td>Thai, Chinese, Indian, Asian</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>204</th>\n","      <td>Thai, Indian, Asian</td>\n","      <td>Thai, Indian, Asian</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>205</th>\n","      <td>Thai, Kid-Friendly</td>\n","      <td>Thai, Kid-Friendly</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>206 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c26eeb3c-0793-4a98-ba63-428ead90d43a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c26eeb3c-0793-4a98-ba63-428ead90d43a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c26eeb3c-0793-4a98-ba63-428ead90d43a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":[],"metadata":{"id":"Mu4oWXzo0jBu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"HYW1LAqX0jGV"},"execution_count":null,"outputs":[]}]}