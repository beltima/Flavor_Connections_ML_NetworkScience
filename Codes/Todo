{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Recipe_cleanup"],"metadata":{"id":"g9ujjbp_ssif"}},{"cell_type":"code","source":["'''Clean up recipes from yummly, to produce ingredient lists and flavor lists, and normalize flavor profile using tfidf technique\n","Pickle the dataframe after clean up as 'yummly_clean.pkl'\n","Pickle the dataframe projected into the ingredient space in the flavor network as 'yummly_ingr.pkl'\n","'''\n","\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","from nltk.stem import WordNetLemmatizer\n","from nltk.stem.snowball import SnowballStemmer\n","from nltk.tokenize import word_tokenize\n","import re\n","import pickle\n","import itertools\n","from collections import Counter\n","from sklearn.preprocessing import normalize"],"metadata":{"id":"ktJOeSyz73JJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import nltk\n","nltk.download('punkt')\n","nltk.download('wordnet')\n","nltk.download('omw-1.4')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zLeIyahUAdwZ","executionInfo":{"status":"ok","timestamp":1679836052567,"user_tz":-120,"elapsed":1550,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"b4b65607-8000-4f37-bf7f-2579ac7c54dc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n","[nltk_data] Downloading package wordnet to /root/nltk_data...\n","[nltk_data] Downloading package omw-1.4 to /root/nltk_data...\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["#take the long string in 'ingredients', lemmatize, regex, and split into words\n","def split_ingr(x):\n","    wnl=WordNetLemmatizer()\n","    cleanlist=[]\n","    lst = x.strip('[]').split(',')\n","    cleanlist=[' '.join(wnl.lemmatize(word.lower()) for word in word_tokenize(re.sub('[^a-zA-Z]',' ',item))) for item in lst]\n","    return cleanlist"],"metadata":{"id":"gJda04Va8GaI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#remove low-information words from ingredients, could use more\n","def remove_word(word):\n","    alist =['low fat', 'reduced fat', 'fat free', 'fatfree', 'nonfat','gluten free', 'free range',\\\n","            'reduced sodium', 'salt free','sodium free', 'low sodium', 'sweetened','unsweetened','large','extra large','oz ']\n","    for item in alist:\n","        word = word.replace(item,'')\n","    return word"],"metadata":{"id":"xYoMjOsX8IEN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#match ingredients in yummly recipes to ingredients in graph; filter out those with >3 missing matches\n","def cleanup_ingredients(ingr,df,col):\n","\n","    df_ingr = set()\n","    df[col].map(lambda x: [df_ingr.add(i) for i in x])\n","\n","    long_ingredients = filter(lambda x: ' ' in x, ingr)\n","    short_ingredients = ingr - set(long_ingredients)\n","    df_dic={}\n","\n","    for item in long_ingredients:\n","        for key in df_ingr:\n","            if item in key:\n","                if key not in df_dic:\n","                    df_dic[key] = [item]\n","                else:\n","                    df_dic[key].append(item)\n","\n","    for item in short_ingredients:\n","        for key in df_ingr:\n","            if item in key.split():\n","                if key not in df_dic:\n","                    df_dic[key] = [item]\n","                else:\n","                    df_dic[key].append(item)\n","\n","    diff_dic = df_ingr - set(df_dic.keys())\n","\n","    df_dic = tweak_dic(df_dic, diff_dic)\n","    diff_dic = df_ingr - set(df_dic.keys())\n","    print('length of ingredients, matched ingredients, missed ingredients')\n","    print(len(df_ingr), len(df_dic.keys()), len(diff_dic))\n","\n","    df2 = df.copy()\n","    df2['len_diff'] = df2[col].apply(lambda x: count_missing(x,df_dic))\n","    df2['match ingredients'] = df2[col].apply(lambda x: ingr_replace(x,df_dic))\n","    df2['len_match'] = df2['match ingredients'].apply(lambda x: len(x))\n","    #remove entries with less match ingredients or no matching ingr_ingredients\n","    df3 = df2[(df2['len_diff']<3) & (df2['len_match']!=0)]\n","    print('dataframe shape before and after filtering')\n","    print(df2.shape, df3.shape)\n","\n","    #sort ingredients set for later matching to flavor\n","    match_ingr = set()\n","    df3['match ingredients'].map(lambda x: [match_ingr.add(i) for i in x])\n","    sorted_ingr = sorted(list(match_ingr))\n","    #create columns for each ingredient\n","    df4 = df3.copy()\n","    for item in sorted_ingr:\n","        df4[item] = df4['match ingredients'].apply(lambda x:item in x)\n","\n","    df_X = df4.drop(df3.columns, axis=1)\n","\n","    return df4, df_X"],"metadata":{"id":"6qWXoffZ8Jse"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#after direct string matching, catch some spelling differences through this\n","def tweak_dic(df_dic, diff_df):\n","\n","    alist = ['chile', 'chili','chilies','chilli','sriracha']\n","    for pepper in alist:\n","        for item in filter(lambda x: pepper in x, diff_df):\n","            if item not in df_dic:\n","                df_dic[item] = ['tabasco pepper']\n","\n","    for item in filter(lambda x: 'flour' in x, diff_df):\n","        if item not in df_dic:\n","                df_dic[item] = ['whole grain wheat flour']\n","\n","    for item in filter(lambda x: 'tumeric' in x, diff_df):\n","        if item not in df_dic:\n","                df_dic[item] = ['turmeric']\n","\n","    for item in filter(lambda x: 'yoghurt' in x, diff_df):\n","        if item not in df_dic:\n","                df_dic[item] = ['yogurt']\n","\n","    for item in filter(lambda x: 'sausage' in x, diff_df):\n","        if item not in df_dic:\n","            df_dic[item] = ['smoked sausage']\n","\n","    alist = ['rib','chuck','sirloin','steak']\n","    for beef in alist:\n","        for item in filter(lambda x: beef in x, diff_df):\n","            if item not in df_dic:\n","                df_dic[item] = ['beef']\n","\n","    for item in filter(lambda x: 'fillet' in x, diff_df):\n","        if item not in df_dic:\n","                df_dic[item] = ['raw fish']\n","\n","    for item in filter(lambda x: 'mozzarella' in x, diff_df):\n","        if item not in df_dic:\n","                df_dic[item] = ['mozzarella cheese']\n","\n","    for item in filter(lambda x: 'spinach' in x, diff_df):\n","        if item not in df_dic:\n","                df_dic[item] = ['dried spinach']\n","\n","    for item in filter(lambda x: 'curry' in x, diff_df):\n","        if item not in df_dic:\n","            df_dic[item] = ['coriander','turmeric','cumin','cayenne']\n","\n","    return df_dic"],"metadata":{"id":"TkzUH3Fw8Nt1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Count missing ingredients after matching; salt, sugar, water and oil are not in the flavor network and thus don't count as missing\n","def count_missing(lst, df_dic):\n","    cnt = 0\n","    for item in lst:\n","        if item in df_dic:\n","            cnt+=1\n","        elif 'salt' in item.split():\n","            cnt+=1\n","        elif 'sugar' in item.split():\n","            cnt+=1\n","        elif 'water' in item.split():\n","            cnt+=1\n","        elif 'oil' in item.split():\n","            cnt+=1\n","\n","    return len(lst) - cnt"],"metadata":{"id":"t9oSKDDH8R4C"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#After making dictionary to map ingredients from yummly recipes to ingredients in the flavor network, this is to replace ingredients in \n","# recipes with ingredients in the flavor network\n","def ingr_replace(lst, df_dic):\n","    temp = set()\n","    for item in lst:\n","        if item in df_dic:\n","            temp.update(df_dic[item])\n","    return temp"],"metadata":{"id":"FUDy5xUO8TXs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#using flavor network to project recipes from ingredient matrix to flavor matrix\n","def flavor_profile(df,ingr,comp,ingr_comp):\n","    sorted_ingredients = df.columns\n","    underscore_ingredients=[]\n","    for item in sorted_ingredients:\n","        underscore_ingredients.append(item.replace(' ','_'))\n","\n","    print(len(underscore_ingredients), len(sorted_ingredients))\n","\n","    ingr_total = ingr_comp.join(ingr,how='right',on='# ingredient id')\n","    ingr_total = ingr_total.join(comp,how='right',on='compound id')\n","\n","    ingr_pivot = pd.crosstab(ingr_total['ingredient name'],ingr_total['compound id'])\n","    ingr_flavor = ingr_pivot[ingr_pivot.index.isin(underscore_ingredients)]\n","\n","    df_flavor = df.values.dot(ingr_flavor.values)\n","    print(df.shape, df_flavor.shape)\n","\n","    return df_flavor"],"metadata":{"id":"qBgaLt5_8WAK"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QcuOu4hU7xah"},"outputs":[],"source":["#normalize flavor matrix with tfidf method\n","def make_tfidf(arr):\n","    '''input, numpy array with flavor counts for each recipe and compounds\n","    return numpy array adjusted as tfidf\n","    '''\n","    arr2 = arr.copy()\n","    N=arr2.shape[0]\n","    l2_rows = np.sqrt(np.sum(arr2**2, axis=1)).reshape(N, 1)\n","    l2_rows[l2_rows==0]=1\n","    arr2_norm = arr2/l2_rows\n","\n","    arr2_freq = np.sum(arr2_norm>0, axis=0)\n","    arr2_idf = np.log(float(N+1) / (1.0 + arr2_freq)) + 1.0\n","\n","    \n","    tfidf = np.multiply(arr2_norm, arr2_idf)\n","    tfidf = normalize(tfidf, norm='l2', axis=1)\n","    print(tfidf.shape)\n","    return tfidf"]},{"cell_type":"code","source":["yum = pd.read_pickle('/content/drive/Shareddrives/MLNS/Project/Codes/Data/yummly.pkl')\n","#drop duplicates\n","yum = yum.drop_duplicates(['id'], keep='first').reset_index(drop=True)\n","#drop low ratings\n","yum = yum[yum['rating']>2]\n","#drop dishes such as dessert and sauce\n","yum = yum[yum['course']!='[Desserts]'].reset_index(drop=True)\n","yum = yum[yum['course']!='[Condiments and Sauces]'].reset_index(drop=True)\n","#clean up cuisine labels\n","yum['cuisine']= yum['cuisine'].apply(lambda x: x.strip('[]')).reset_index(drop=True)"],"metadata":{"id":"-LkFtsWj73Mp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cuisine_dic = {'Thai, Asian': 'Thai', 'Chinese, Asian':'Chinese', 'Japanese, Asian':'Japanese',\n","  'Southern & Soul Food, American': 'Southern & Soul Food',\n","  'Mediterranean, Greek': 'Mediterranean',\n","  'Cajun & Creole, Southern & Soul Food, American': 'Southern & Soul Food',\n","  'Asian, Japanese': 'Japanese','Cajun & Creole, American': 'Cajun & Creole',\n","  'Hawaiian, American': 'Hawaiian', 'Asian, Thai': 'Thai', 'American, Cuban':'Cuban',\n","  'Greek, Mediterranean': 'Greek', 'Indian, Asian': 'Indian','Asian, Chinese':'Chinese',\n","  'American, Kid-Friendly': 'American', 'Spanish, Portuguese':'Spanish',\n","  'Mexican, Southwestern': 'Mexican', 'Southwestern, Mexican': 'Southwestern',\n","  'American, Southern & Soul Food': 'Southern & Soul Food',\n","  'Cajun & Creole, Southern & Soul Food': 'Southern & Soul Food',\n","  'Portuguese, American':'American','American, French': 'American',\n","  'American, Cajun & Creole':'American',\n","  'American, Cajun & Creole, Southern & Soul Food': 'American',\n","  'Irish, American':'American'\n","    }"],"metadata":{"id":"2lwvIshc9rVY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["yum['cuisine'] = yum['cuisine'].apply(lambda x: cuisine_dic[x] if x in cuisine_dic else x).reset_index(drop=True)\n","#remove some cusines with few dishes\n","subcuisine = list(yum['cuisine'].value_counts().index[:25])\n","yum = yum[yum['cuisine'].isin(subcuisine)].reset_index(drop=True)\n","#clean up ingredients and create list\n","# yum['clean ingredients'] = yum['ingredients'].apply(lambda x: split_ingr(x)).reset_index(drop=True)\n","# yum['clean ingredients'] = yum['clean ingredients'].apply(lambda x:[remove_word(word) for word in x]).reset_index(drop=True)\n"],"metadata":{"id":"evleP_lO9rZD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#clean up ingredients and create list\n","yum['clean ingredients'] = yum['ingredients'].apply(lambda x: split_ingr(x)).reset_index(drop=True)\n","yum['clean ingredients'] = yum['clean ingredients'].apply(lambda x:[remove_word(word) for word in x]).reset_index(drop=True)\n","yum.to_pickle('/content/drive/Shareddrives/MLNS/Project/Codes/Data/new_data/yummly_clean.pkl')\n","yum\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":693},"id":"DuLjOo6J-tXB","executionInfo":{"status":"ok","timestamp":1679836158668,"user_tz":-120,"elapsed":8333,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"7d4f51f4-4698-421d-fb24-42743375df2a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0                                                 id  \\\n","0              0                Southern-Cornbread-Dressing-1357820   \n","1              3            Disappearing-buffalo-chicken-dip-297712   \n","2              4                      Classic-macaroni-salad-304692   \n","3              5                            Classic-coleslaw-303481   \n","4             10  Buffalo-Turkey-Burgers-with-Buffalo-Blue-Chees...   \n","...          ...                                                ...   \n","6783         494                    Thai-Coconut-Shrimp-Soup-901927   \n","6784         495                   Thai-Style-Broiled-Shrimp-779084   \n","6785         496                       Pad-Thai-French-Fries-984208   \n","6786         497                 Spicy-Thai-Lobster-Soup-My-Recipes   \n","6787         499   Thai-Salad-with-Peanut-Dressing-MyRecipes-213423   \n","\n","                                             recipeName  rating  \\\n","0                           Southern Cornbread Dressing       4   \n","1                      Disappearing Buffalo Chicken Dip       4   \n","2                                Classic Macaroni Salad       4   \n","3                                      Classic Coleslaw       4   \n","4     Buffalo Turkey Burgers with Buffalo Blue Chees...       4   \n","...                                                 ...     ...   \n","6783                           Thai Coconut Shrimp Soup       3   \n","6784                          Thai-Style Broiled Shrimp       3   \n","6785                              Pad Thai French Fries       4   \n","6786                            Spicy Thai Lobster Soup       4   \n","6787                    Thai Salad with Peanut Dressing       4   \n","\n","      totalTimeInSeconds                 course               cuisine  \\\n","0                 3600.0                    NaN  Southern & Soul Food   \n","1                 2100.0           [Appetizers]              American   \n","2                 1500.0  [Salads, Side Dishes]              American   \n","3                  600.0  [Salads, Side Dishes]  Southern & Soul Food   \n","4                 1380.0          [Main Dishes]              American   \n","...                  ...                    ...                   ...   \n","6783              1500.0                [Soups]                  Thai   \n","6784               600.0                    NaN                  Thai   \n","6785              1800.0                    NaN                  Thai   \n","6786              3300.0   [Main Dishes, Soups]                  Thai   \n","6787               900.0               [Salads]                  Thai   \n","\n","                                            ingredients  \\\n","0     [buttermilk cornbread, sandwich bread, salt, b...   \n","1     [light mayonnaise, lemon juice, cayenne pepper...   \n","2     [elbow macaroni, hellmann' or best food real m...   \n","3     [hellmann' or best food real mayonnais, lemon ...   \n","4     [lean ground turkey, hot sauce, ranch-style se...   \n","...                                                 ...   \n","6783  [olive oil, large shrimp, carrots, garlic, gin...   \n","6784  [garlic cloves, thai chile, salt, sugar, fish ...   \n","6785  [sauce, fish sauce, cilantro, lime, peanuts, c...   \n","6786  [lobster, vegetable oil, asian, fish, lime rin...   \n","6787  [water, rice vinegar, green onions, reduced fa...   \n","\n","                                      clean ingredients  \n","0     [buttermilk cornbread, sandwich bread, salt, b...  \n","1     [light mayonnaise, lemon juice, cayenne pepper...  \n","2     [elbow macaroni, hellmann or best food real ma...  \n","3     [hellmann or best food real mayonnais, lemon j...  \n","4     [lean ground turkey, hot sauce, ranch style se...  \n","...                                                 ...  \n","6783  [olive oil,  shrimp, carrot, garlic, ginger, r...  \n","6784  [garlic clove, thai chile, salt, sugar, fish s...  \n","6785  [sauce, fish sauce, cilantro, lime, peanut, cr...  \n","6786  [lobster, vegetable oil, asian, fish, lime rin...  \n","6787  [water, rice vinegar, green onion,  chunky pea...  \n","\n","[6788 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-905e65c4-c147-48ca-8f82-3951edfd9c0f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>id</th>\n","      <th>recipeName</th>\n","      <th>rating</th>\n","      <th>totalTimeInSeconds</th>\n","      <th>course</th>\n","      <th>cuisine</th>\n","      <th>ingredients</th>\n","      <th>clean ingredients</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Southern-Cornbread-Dressing-1357820</td>\n","      <td>Southern Cornbread Dressing</td>\n","      <td>4</td>\n","      <td>3600.0</td>\n","      <td>NaN</td>\n","      <td>Southern &amp; Soul Food</td>\n","      <td>[buttermilk cornbread, sandwich bread, salt, b...</td>\n","      <td>[buttermilk cornbread, sandwich bread, salt, b...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>Disappearing-buffalo-chicken-dip-297712</td>\n","      <td>Disappearing Buffalo Chicken Dip</td>\n","      <td>4</td>\n","      <td>2100.0</td>\n","      <td>[Appetizers]</td>\n","      <td>American</td>\n","      <td>[light mayonnaise, lemon juice, cayenne pepper...</td>\n","      <td>[light mayonnaise, lemon juice, cayenne pepper...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>Classic-macaroni-salad-304692</td>\n","      <td>Classic Macaroni Salad</td>\n","      <td>4</td>\n","      <td>1500.0</td>\n","      <td>[Salads, Side Dishes]</td>\n","      <td>American</td>\n","      <td>[elbow macaroni, hellmann' or best food real m...</td>\n","      <td>[elbow macaroni, hellmann or best food real ma...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5</td>\n","      <td>Classic-coleslaw-303481</td>\n","      <td>Classic Coleslaw</td>\n","      <td>4</td>\n","      <td>600.0</td>\n","      <td>[Salads, Side Dishes]</td>\n","      <td>Southern &amp; Soul Food</td>\n","      <td>[hellmann' or best food real mayonnais, lemon ...</td>\n","      <td>[hellmann or best food real mayonnais, lemon j...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10</td>\n","      <td>Buffalo-Turkey-Burgers-with-Buffalo-Blue-Chees...</td>\n","      <td>Buffalo Turkey Burgers with Buffalo Blue Chees...</td>\n","      <td>4</td>\n","      <td>1380.0</td>\n","      <td>[Main Dishes]</td>\n","      <td>American</td>\n","      <td>[lean ground turkey, hot sauce, ranch-style se...</td>\n","      <td>[lean ground turkey, hot sauce, ranch style se...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6783</th>\n","      <td>494</td>\n","      <td>Thai-Coconut-Shrimp-Soup-901927</td>\n","      <td>Thai Coconut Shrimp Soup</td>\n","      <td>3</td>\n","      <td>1500.0</td>\n","      <td>[Soups]</td>\n","      <td>Thai</td>\n","      <td>[olive oil, large shrimp, carrots, garlic, gin...</td>\n","      <td>[olive oil,  shrimp, carrot, garlic, ginger, r...</td>\n","    </tr>\n","    <tr>\n","      <th>6784</th>\n","      <td>495</td>\n","      <td>Thai-Style-Broiled-Shrimp-779084</td>\n","      <td>Thai-Style Broiled Shrimp</td>\n","      <td>3</td>\n","      <td>600.0</td>\n","      <td>NaN</td>\n","      <td>Thai</td>\n","      <td>[garlic cloves, thai chile, salt, sugar, fish ...</td>\n","      <td>[garlic clove, thai chile, salt, sugar, fish s...</td>\n","    </tr>\n","    <tr>\n","      <th>6785</th>\n","      <td>496</td>\n","      <td>Pad-Thai-French-Fries-984208</td>\n","      <td>Pad Thai French Fries</td>\n","      <td>4</td>\n","      <td>1800.0</td>\n","      <td>NaN</td>\n","      <td>Thai</td>\n","      <td>[sauce, fish sauce, cilantro, lime, peanuts, c...</td>\n","      <td>[sauce, fish sauce, cilantro, lime, peanut, cr...</td>\n","    </tr>\n","    <tr>\n","      <th>6786</th>\n","      <td>497</td>\n","      <td>Spicy-Thai-Lobster-Soup-My-Recipes</td>\n","      <td>Spicy Thai Lobster Soup</td>\n","      <td>4</td>\n","      <td>3300.0</td>\n","      <td>[Main Dishes, Soups]</td>\n","      <td>Thai</td>\n","      <td>[lobster, vegetable oil, asian, fish, lime rin...</td>\n","      <td>[lobster, vegetable oil, asian, fish, lime rin...</td>\n","    </tr>\n","    <tr>\n","      <th>6787</th>\n","      <td>499</td>\n","      <td>Thai-Salad-with-Peanut-Dressing-MyRecipes-213423</td>\n","      <td>Thai Salad with Peanut Dressing</td>\n","      <td>4</td>\n","      <td>900.0</td>\n","      <td>[Salads]</td>\n","      <td>Thai</td>\n","      <td>[water, rice vinegar, green onions, reduced fa...</td>\n","      <td>[water, rice vinegar, green onion,  chunky pea...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6788 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-905e65c4-c147-48ca-8f82-3951edfd9c0f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-905e65c4-c147-48ca-8f82-3951edfd9c0f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-905e65c4-c147-48ca-8f82-3951edfd9c0f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["#make list and set for all ingredients\n","yum_lst = list(itertools.chain(*(yum['clean ingredients'].tolist())))\n","yum_ingr = set(yum_lst)\n","print(len(yum_lst), len(yum_ingr))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zcd_cLnl73ag","executionInfo":{"status":"ok","timestamp":1679836163222,"user_tz":-120,"elapsed":197,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"ce8feffe-21ee-4335-9411-4c4e19cb863c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["71760 3652\n"]}]},{"cell_type":"code","source":["comp = pd.read_csv('/content/drive/Shareddrives/MLNS/Project/Codes/Data/comp_info.tsv',index_col=0,sep='\\t')\n","comp"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"EWrMtkJqSw0w","executionInfo":{"status":"ok","timestamp":1678649338139,"user_tz":-60,"elapsed":391,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"e3592a82-5595-4d58-9dff-1d2f61e72287"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                              Compound name  CAS number\n","# id                                                   \n","0                                   jasmone    488-10-8\n","1                     5-methylhexanoic_acid    628-46-6\n","2                               l-glutamine     56-85-9\n","3     1-methyl-3-methoxy-4-isopropylbenzene   1076-56-8\n","4                 methyl-3-phenylpropionate    103-25-3\n","...                                     ...         ...\n","1102                             2-heptanol    543-49-7\n","1103                  1-octen-3-yl_butyrate  16491-54-6\n","1104                               guaiacol     90-05-1\n","1105        (+/?)-methyl_5-acetoxyhexanoate  35234-22-1\n","1106                          ethyl_sorbate   2396-84-1\n","\n","[1107 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-b8c671eb-6c90-4fd5-8368-823562462c70\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Compound name</th>\n","      <th>CAS number</th>\n","    </tr>\n","    <tr>\n","      <th># id</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>jasmone</td>\n","      <td>488-10-8</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5-methylhexanoic_acid</td>\n","      <td>628-46-6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>l-glutamine</td>\n","      <td>56-85-9</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1-methyl-3-methoxy-4-isopropylbenzene</td>\n","      <td>1076-56-8</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>methyl-3-phenylpropionate</td>\n","      <td>103-25-3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1102</th>\n","      <td>2-heptanol</td>\n","      <td>543-49-7</td>\n","    </tr>\n","    <tr>\n","      <th>1103</th>\n","      <td>1-octen-3-yl_butyrate</td>\n","      <td>16491-54-6</td>\n","    </tr>\n","    <tr>\n","      <th>1104</th>\n","      <td>guaiacol</td>\n","      <td>90-05-1</td>\n","    </tr>\n","    <tr>\n","      <th>1105</th>\n","      <td>(+/?)-methyl_5-acetoxyhexanoate</td>\n","      <td>35234-22-1</td>\n","    </tr>\n","    <tr>\n","      <th>1106</th>\n","      <td>ethyl_sorbate</td>\n","      <td>2396-84-1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1107 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b8c671eb-6c90-4fd5-8368-823562462c70')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b8c671eb-6c90-4fd5-8368-823562462c70 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b8c671eb-6c90-4fd5-8368-823562462c70');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["ingr_comp = pd.read_csv('/content/drive/Shareddrives/MLNS/Project/Codes/Data/ingr_comp.tsv',sep='\\t')\n","ingr_comp"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"zmkagQWZSwxK","executionInfo":{"status":"ok","timestamp":1678649388995,"user_tz":-60,"elapsed":624,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"2634807f-2347-4d6a-9ad8-90d109495243"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       # ingredient id  compound id\n","0                 1392          906\n","1                 1259          861\n","2                 1079          673\n","3                   22          906\n","4                  103          906\n","...                ...          ...\n","36776              876          657\n","36777              637          461\n","36778              689          650\n","36779              689          297\n","36780             1080           13\n","\n","[36781 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-2446b21f-ce99-4b1e-bf8d-3564de1521c3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th># ingredient id</th>\n","      <th>compound id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1392</td>\n","      <td>906</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1259</td>\n","      <td>861</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1079</td>\n","      <td>673</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>22</td>\n","      <td>906</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>103</td>\n","      <td>906</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>36776</th>\n","      <td>876</td>\n","      <td>657</td>\n","    </tr>\n","    <tr>\n","      <th>36777</th>\n","      <td>637</td>\n","      <td>461</td>\n","    </tr>\n","    <tr>\n","      <th>36778</th>\n","      <td>689</td>\n","      <td>650</td>\n","    </tr>\n","    <tr>\n","      <th>36779</th>\n","      <td>689</td>\n","      <td>297</td>\n","    </tr>\n","    <tr>\n","      <th>36780</th>\n","      <td>1080</td>\n","      <td>13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>36781 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2446b21f-ce99-4b1e-bf8d-3564de1521c3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2446b21f-ce99-4b1e-bf8d-3564de1521c3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2446b21f-ce99-4b1e-bf8d-3564de1521c3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["ingr = pd.read_csv('/content/drive/Shareddrives/MLNS/Project/Codes/Data/ingr_info.tsv',index_col=0,sep='\\t')\n","ingr['space ingredients']= ingr['ingredient name'].apply(lambda x: x.replace('_',' ') )\n","ingr_ingredients = set()\n","ingr['space ingredients'].map(lambda x: ingr_ingredients.add(x))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"BMJeHBtdSwtO","executionInfo":{"status":"ok","timestamp":1678649431718,"user_tz":-60,"elapsed":389,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"9bf6e8f5-2416-4f7a-ec8f-1562ebf99ad2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 ingredient name          category\n","# id                                              \n","0             magnolia_tripetala            flower\n","1      calyptranthes_parriculata             plant\n","2     chamaecyparis_pisifera_oil  plant derivative\n","3                       mackerel      fish/seafood\n","4         mimusops_elengi_flower            flower\n","...                          ...               ...\n","1525                 tobacco_oil  plant derivative\n","1526               cinnamon_leaf             plant\n","1527                   green_tea  plant derivative\n","1528      artemisia_porrecta_oil  plant derivative\n","1529              munster_cheese             dairy\n","\n","[1530 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-f91e4e4b-42f4-4397-a1b8-560879da6871\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ingredient name</th>\n","      <th>category</th>\n","    </tr>\n","    <tr>\n","      <th># id</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>magnolia_tripetala</td>\n","      <td>flower</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>calyptranthes_parriculata</td>\n","      <td>plant</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>chamaecyparis_pisifera_oil</td>\n","      <td>plant derivative</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>mackerel</td>\n","      <td>fish/seafood</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>mimusops_elengi_flower</td>\n","      <td>flower</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1525</th>\n","      <td>tobacco_oil</td>\n","      <td>plant derivative</td>\n","    </tr>\n","    <tr>\n","      <th>1526</th>\n","      <td>cinnamon_leaf</td>\n","      <td>plant</td>\n","    </tr>\n","    <tr>\n","      <th>1527</th>\n","      <td>green_tea</td>\n","      <td>plant derivative</td>\n","    </tr>\n","    <tr>\n","      <th>1528</th>\n","      <td>artemisia_porrecta_oil</td>\n","      <td>plant derivative</td>\n","    </tr>\n","    <tr>\n","      <th>1529</th>\n","      <td>munster_cheese</td>\n","      <td>dairy</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1530 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f91e4e4b-42f4-4397-a1b8-560879da6871')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f91e4e4b-42f4-4397-a1b8-560879da6871 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f91e4e4b-42f4-4397-a1b8-560879da6871');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["yum_ingr, yum_X = cleanup_ingredients(ingr_ingredients, yum, 'clean ingredients')\n","#pickle the dataframe yum_ingr and yum_X\n","yum_ingr.to_pickle('/content/drive/Shareddrives/MLNS/Project/Codes/Data/new_data/yummly_ingr.pkl')\n","yum_X.to_pickle('/content/drive/Shareddrives/MLNS/Project/Codes/Data/new_data/yummly_ingrX.pkl')\n","#get flavor profile\n","yum_flavor = flavor_profile(yum_X, ingr, comp, ingr_comp)\n","#make tfidf from flavor profile\n","yum_tfidf = make_tfidf(yum_flavor)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ig5mMEqTSwpO","executionInfo":{"status":"ok","timestamp":1678651862156,"user_tz":-60,"elapsed":3621,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"12f567c7-83dd-41e4-dcd6-7d1defe29d53"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["length of ingredients, matched ingredients, missed ingredients\n","3652 2399 1253\n","dataframe shape before and after filtering\n","(6788, 12) (5622, 12)\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-6-839777043bc0>:50: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df4[item] = df4['match ingredients'].apply(lambda x:item in x)\n"]},{"output_type":"stream","name":"stdout","text":["236 236\n","(5622, 236) (5622, 1107)\n","(5622, 1107)\n"]}]},{"cell_type":"code","source":["yum_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":540},"id":"sPOBxOOSc2Zu","executionInfo":{"status":"ok","timestamp":1678652025334,"user_tz":-60,"elapsed":348,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"a691c70c-c536-4d4b-dd83-5f801f833ab2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      almond  anise  apple  apricot  artichoke  asparagus  avocado  bacon  \\\n","0      False  False  False    False      False      False    False  False   \n","1      False  False  False    False      False      False    False  False   \n","3      False  False  False    False      False      False    False  False   \n","5      False  False  False    False      False      False    False  False   \n","6      False  False  False    False      False      False    False  False   \n","...      ...    ...    ...      ...        ...        ...      ...    ...   \n","6782   False  False  False    False      False      False    False  False   \n","6783   False  False  False    False      False      False    False  False   \n","6784   False  False  False    False      False      False    False  False   \n","6785   False  False   True    False      False      False    False  False   \n","6786   False  False  False    False      False      False    False  False   \n","\n","      banana  barley  ...  wheat  whiskey  whitefish  whole grain wheat flour  \\\n","0      False   False  ...  False    False      False                    False   \n","1      False   False  ...  False    False      False                    False   \n","3      False   False  ...  False    False      False                    False   \n","5      False   False  ...  False    False      False                     True   \n","6      False   False  ...  False    False      False                    False   \n","...      ...     ...  ...    ...      ...        ...                      ...   \n","6782   False   False  ...  False    False      False                    False   \n","6783   False   False  ...  False    False      False                    False   \n","6784   False   False  ...  False    False      False                    False   \n","6785   False   False  ...  False    False      False                    False   \n","6786   False   False  ...  False    False      False                    False   \n","\n","       wine   wood    yam  yeast  yogurt  zucchini  \n","0     False  False  False  False   False     False  \n","1     False  False  False  False   False     False  \n","3     False  False  False  False   False     False  \n","5     False  False  False  False   False     False  \n","6     False  False  False  False   False     False  \n","...     ...    ...    ...    ...     ...       ...  \n","6782  False  False  False  False   False     False  \n","6783  False  False  False  False   False     False  \n","6784  False  False  False  False   False     False  \n","6785  False  False  False  False   False     False  \n","6786  False  False  False  False   False     False  \n","\n","[5622 rows x 236 columns]"],"text/html":["\n","  <div id=\"df-e646a18b-0253-450c-bcc8-12ea566437a8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>almond</th>\n","      <th>anise</th>\n","      <th>apple</th>\n","      <th>apricot</th>\n","      <th>artichoke</th>\n","      <th>asparagus</th>\n","      <th>avocado</th>\n","      <th>bacon</th>\n","      <th>banana</th>\n","      <th>barley</th>\n","      <th>...</th>\n","      <th>wheat</th>\n","      <th>whiskey</th>\n","      <th>whitefish</th>\n","      <th>whole grain wheat flour</th>\n","      <th>wine</th>\n","      <th>wood</th>\n","      <th>yam</th>\n","      <th>yeast</th>\n","      <th>yogurt</th>\n","      <th>zucchini</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6782</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6783</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6784</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6785</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6786</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5622 rows × 236 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e646a18b-0253-450c-bcc8-12ea566437a8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e646a18b-0253-450c-bcc8-12ea566437a8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e646a18b-0253-450c-bcc8-12ea566437a8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["#pickle numpy array as dataframes\n","pd.DataFrame(yum_flavor).to_pickle('/content/drive/Shareddrives/MLNS/Project/Codes/Data/new_data/yum_flavor.pkl')\n","pd.DataFrame(yum_tfidf).to_pickle('/content/drive/Shareddrives/MLNS/Project/Codes/Data/new_data/yum_tfidf.pkl')"],"metadata":{"id":"iyahi7njaEeD"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Graph Building"],"metadata":{"id":"MSCU-HLXvH9X"}},{"cell_type":"code","source":["'''Build graph with data from Yong Ahn's site\n","Do backbone extraction to simplify graph\n","Write csv file and do visualizaation in cytoscape\n","'''\n","\n","import numpy as np\n","import pandas as pd\n","import networkx as nx\n"],"metadata":{"id":"iNTF-_fddBpC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#ingredient and compound information\n","comp = pd.read_csv('/content/drive/Shareddrives/MLNS/Project/Codes/Data/comp_info.tsv',index_col=0,sep='\\t')\n","ingr_comp = pd.read_csv('/content/drive/Shareddrives/MLNS/Project/Codes/Data/ingr_comp.tsv',sep='\\t')\n","ingr = pd.read_csv('/content/drive/Shareddrives/MLNS/Project/Codes/Data/ingr_info.tsv',index_col=0,sep='\\t')\n","#edge between ingredients\n","df = pd.read_csv('/content/drive/Shareddrives/MLNS/Project/Codes/Data/srep00196-s2.csv',skiprows=4,header=None)\n","df.columns = ['ingr1','ingr2','shared']\n","#merge with 'ingr' to get category information\n","df_category = pd.merge(df,ingr, left_on='ingr1', right_on='ingredient name').drop('ingredient name',axis=1)"],"metadata":{"id":"IfIqJfeavUrl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#create ingredient lists from recipes\n","recipe = pd.read_csv('/content/drive/Shareddrives/MLNS/Project/Codes/Data/srep00196-s3.csv',skiprows=3,sep='\\t')\n","recipe.columns=['recipes']\n","#create ingredients column with the first label for cuisine\n","recipe['ingredients'] = recipe['recipes'].apply(lambda x: x.split(',')[1:])\n","all_ingredients = set()\n","recipe.ingredients.map(lambda x: [all_ingredients.add(i) for i in x])\n","len(all_ingredients) #381 ingredients"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z3irboPIvaNf","executionInfo":{"status":"ok","timestamp":1678690678951,"user_tz":-60,"elapsed":1016,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"aa3c2712-1fde-44ea-e8c2-1e696fa7ca48"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["381"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["#filter dataframe with all_ingredients\n","df_subset = df_category[df_category['ingr1'].isin(all_ingredients)]\n","df_subset = df_subset[df_subset['ingr2'].isin(all_ingredients)]"],"metadata":{"id":"p04vciFLvZ24"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["####build graph and extract backbone\n","G1 = nx.Graph()\n","weights ={}\n","for i in range(df_subset.shape[0]):\n","    G1.add_edge(df_subset.iloc[i,0],df_subset.iloc[i,1])\n","    weights[df_subset.iloc[i,0],df_subset.iloc[i,1]] = df_subset.iloc[i,2]\n","    weights[df_subset.iloc[i,1],df_subset.iloc[i,0]] = df_subset.iloc[i,2]"],"metadata":{"id":"BzviZkH6vZzl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","# #################### checa cómo cambiar esto\n","#extract backbone of graph, using disparity filter\n","def extract_backbone(G, weights, alpha):\n","    keep_graph = nx.Graph()\n","    for n in G:\n","        k_n = len( G[n] )\n","        if k_n > 1:\n","            sum_w = sum( weights[n,nj] for nj in G[n] )\n","            for nj in G[n]:\n","                pij = 1.0*weights[n,nj]/sum_w\n","                if (1-pij)**(k_n-1) < alpha: # edge is significant\n","                    keep_graph.add_edge( n,nj )\n","    return keep_graph"],"metadata":{"id":"rbg9RdQdvZko"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["alpha = 0.04\n","G1_backbone = extract_backbone(G1, weights, alpha)"],"metadata":{"id":"tLM1VkX1zJ6x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#make weights into a list and include both directions\n","weights_subset = []\n","for (u,v) in G1_backbone.edges():\n","    weights_subset.append((u,v,weights[u,v]))\n","    weights_subset.append((v,u,weights[u,v]))"],"metadata":{"id":"OhIaZOXNzJ12"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_weights = pd.DataFrame(data=weights_subset)\n","df_backbone = pd.merge(df_weights,ingr, left_on=0, right_on='ingredient name').drop('ingredient name',axis=1)"],"metadata":{"id":"zR7WyAuBzita"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_weights"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"OjOiZznRziYn","executionInfo":{"status":"ok","timestamp":1678691443531,"user_tz":-60,"elapsed":13,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"b1a9d493-bc53-47f2-8ff6-f9f3717aeefa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      0                  1   2\n","0     black_sesame_seed             nutmeg  12\n","1                nutmeg  black_sesame_seed  12\n","2     black_sesame_seed               seed  17\n","3                  seed  black_sesame_seed  17\n","4     black_sesame_seed           rapeseed  17\n","...                 ...                ...  ..\n","1465             flower          carnation   5\n","1466              cider       apple_brandy  15\n","1467       apple_brandy              cider  15\n","1468             almond     roasted_almond   9\n","1469     roasted_almond             almond   9\n","\n","[1470 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-7f2c0116-6bab-478a-84f5-4bb694fa1691\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>black_sesame_seed</td>\n","      <td>nutmeg</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>nutmeg</td>\n","      <td>black_sesame_seed</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>black_sesame_seed</td>\n","      <td>seed</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>seed</td>\n","      <td>black_sesame_seed</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>black_sesame_seed</td>\n","      <td>rapeseed</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1465</th>\n","      <td>flower</td>\n","      <td>carnation</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1466</th>\n","      <td>cider</td>\n","      <td>apple_brandy</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>1467</th>\n","      <td>apple_brandy</td>\n","      <td>cider</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>1468</th>\n","      <td>almond</td>\n","      <td>roasted_almond</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>1469</th>\n","      <td>roasted_almond</td>\n","      <td>almond</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1470 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7f2c0116-6bab-478a-84f5-4bb694fa1691')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7f2c0116-6bab-478a-84f5-4bb694fa1691 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7f2c0116-6bab-478a-84f5-4bb694fa1691');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["df_backbone"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"gPhwtIyNziUb","executionInfo":{"status":"ok","timestamp":1678691457782,"user_tz":-60,"elapsed":14,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"12114601-a869-4ae9-a53d-20e3f0805b52"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      0                  1   2        category\n","0     black_sesame_seed             nutmeg  12  nut/seed/pulse\n","1     black_sesame_seed               seed  17  nut/seed/pulse\n","2     black_sesame_seed           rapeseed  17  nut/seed/pulse\n","3                nutmeg  black_sesame_seed  12           spice\n","4                nutmeg           cinnamon  20           spice\n","...                 ...                ...  ..             ...\n","1465           lavender           gardenia   5          flower\n","1466           lavender             flower   5          flower\n","1467           lavender          carnation   5          flower\n","1468             almond     roasted_almond   9  nut/seed/pulse\n","1469     roasted_almond             almond   9  nut/seed/pulse\n","\n","[1470 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-bfa5eb19-3889-419f-9330-31edfb8857ba\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>black_sesame_seed</td>\n","      <td>nutmeg</td>\n","      <td>12</td>\n","      <td>nut/seed/pulse</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>black_sesame_seed</td>\n","      <td>seed</td>\n","      <td>17</td>\n","      <td>nut/seed/pulse</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>black_sesame_seed</td>\n","      <td>rapeseed</td>\n","      <td>17</td>\n","      <td>nut/seed/pulse</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>nutmeg</td>\n","      <td>black_sesame_seed</td>\n","      <td>12</td>\n","      <td>spice</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>nutmeg</td>\n","      <td>cinnamon</td>\n","      <td>20</td>\n","      <td>spice</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1465</th>\n","      <td>lavender</td>\n","      <td>gardenia</td>\n","      <td>5</td>\n","      <td>flower</td>\n","    </tr>\n","    <tr>\n","      <th>1466</th>\n","      <td>lavender</td>\n","      <td>flower</td>\n","      <td>5</td>\n","      <td>flower</td>\n","    </tr>\n","    <tr>\n","      <th>1467</th>\n","      <td>lavender</td>\n","      <td>carnation</td>\n","      <td>5</td>\n","      <td>flower</td>\n","    </tr>\n","    <tr>\n","      <th>1468</th>\n","      <td>almond</td>\n","      <td>roasted_almond</td>\n","      <td>9</td>\n","      <td>nut/seed/pulse</td>\n","    </tr>\n","    <tr>\n","      <th>1469</th>\n","      <td>roasted_almond</td>\n","      <td>almond</td>\n","      <td>9</td>\n","      <td>nut/seed/pulse</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1470 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bfa5eb19-3889-419f-9330-31edfb8857ba')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bfa5eb19-3889-419f-9330-31edfb8857ba button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bfa5eb19-3889-419f-9330-31edfb8857ba');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["#get prevalance of each ingredient from recipes\n","recipe_count = recipe.copy()\n","for item in all_ingredients:\n","    recipe_count[item] = recipe_count['ingredients'].apply(lambda x:item in x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6CIrccq2ziQG","executionInfo":{"status":"ok","timestamp":1678691511013,"user_tz":-60,"elapsed":11788,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"9570a4cc-8cf0-4fad-b77c-3173950c7ee8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-26-f087bd61d1db>:4: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`\n","  recipe_count[item] = recipe_count['ingredients'].apply(lambda x:item in x)\n"]}]},{"cell_type":"code","source":["recipe_count"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":939},"id":"dhvZ7j0gz27f","executionInfo":{"status":"ok","timestamp":1678691534885,"user_tz":-60,"elapsed":306,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"7bff5a27-4453-4f8b-a23a-f33414785890"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                 recipes  \\\n","0        African,chicken,cinnamon,soy_sauce,onion,ginger   \n","1      African,cane_molasses,ginger,cumin,garlic,tama...   \n","2      African,butter,pepper,onion,cardamom,cayenne,g...   \n","3      African,olive_oil,pepper,wheat,beef,onion,card...   \n","4                              African,honey,wheat,yeast   \n","...                                                  ...   \n","56493  WesternEuropean,cane_molasses,butter,wheat,whi...   \n","56494  WesternEuropean,lemon_juice,wheat,onion,parsle...   \n","56495  WesternEuropean,butter,wheat,onion,beef,bacon,...   \n","56496  WesternEuropean,lemon,onion,black_pepper,white...   \n","56497  WesternEuropean,butter,cheese,wheat,ham,black_...   \n","\n","                                             ingredients  coconut  rosemary  \\\n","0          [chicken, cinnamon, soy_sauce, onion, ginger]    False     False   \n","1      [cane_molasses, ginger, cumin, garlic, tamarin...    False     False   \n","2      [butter, pepper, onion, cardamom, cayenne, gin...    False     False   \n","3      [olive_oil, pepper, wheat, beef, onion, cardam...    False     False   \n","4                                  [honey, wheat, yeast]    False     False   \n","...                                                  ...      ...       ...   \n","56493  [cane_molasses, butter, wheat, whiskey, vanill...    False     False   \n","56494  [lemon_juice, wheat, onion, parsley, celery, n...    False     False   \n","56495  [butter, wheat, onion, beef, bacon, black_pepp...    False     False   \n","56496  [lemon, onion, black_pepper, white_wine, celer...    False     False   \n","56497  [butter, cheese, wheat, ham, black_pepper, par...    False     False   \n","\n","       butter  mozzarella_cheese  shrimp    pea  lentil  coffee  ...  pumpkin  \\\n","0       False              False   False  False   False   False  ...    False   \n","1       False              False   False  False   False   False  ...    False   \n","2        True              False   False  False   False   False  ...    False   \n","3       False              False   False  False   False   False  ...    False   \n","4       False              False   False  False   False   False  ...    False   \n","...       ...                ...     ...    ...     ...     ...  ...      ...   \n","56493    True              False   False  False   False   False  ...    False   \n","56494   False              False   False  False   False   False  ...    False   \n","56495    True              False   False  False   False   False  ...    False   \n","56496   False              False   False  False   False   False  ...    False   \n","56497    True              False   False  False   False   False  ...    False   \n","\n","       squash   beer  roasted_sesame_seed  lima_bean  turmeric  popcorn  \\\n","0       False  False                False      False     False    False   \n","1       False  False                False      False     False    False   \n","2       False  False                False      False     False    False   \n","3       False  False                False      False     False    False   \n","4       False  False                False      False     False    False   \n","...       ...    ...                  ...        ...       ...      ...   \n","56493   False  False                False      False     False    False   \n","56494   False  False                False      False     False    False   \n","56495   False   True                False      False     False    False   \n","56496   False  False                False      False     False    False   \n","56497   False  False                False      False     False    False   \n","\n","        pear  pineapple    hop  \n","0      False      False  False  \n","1      False      False  False  \n","2      False      False  False  \n","3      False      False  False  \n","4      False      False  False  \n","...      ...        ...    ...  \n","56493  False      False  False  \n","56494  False      False  False  \n","56495  False      False  False  \n","56496  False      False  False  \n","56497  False      False  False  \n","\n","[56498 rows x 383 columns]"],"text/html":["\n","  <div id=\"df-8a7654ae-f18b-4ee2-a7d2-c9f86854cdbd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>recipes</th>\n","      <th>ingredients</th>\n","      <th>coconut</th>\n","      <th>rosemary</th>\n","      <th>butter</th>\n","      <th>mozzarella_cheese</th>\n","      <th>shrimp</th>\n","      <th>pea</th>\n","      <th>lentil</th>\n","      <th>coffee</th>\n","      <th>...</th>\n","      <th>pumpkin</th>\n","      <th>squash</th>\n","      <th>beer</th>\n","      <th>roasted_sesame_seed</th>\n","      <th>lima_bean</th>\n","      <th>turmeric</th>\n","      <th>popcorn</th>\n","      <th>pear</th>\n","      <th>pineapple</th>\n","      <th>hop</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>African,chicken,cinnamon,soy_sauce,onion,ginger</td>\n","      <td>[chicken, cinnamon, soy_sauce, onion, ginger]</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>African,cane_molasses,ginger,cumin,garlic,tama...</td>\n","      <td>[cane_molasses, ginger, cumin, garlic, tamarin...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>African,butter,pepper,onion,cardamom,cayenne,g...</td>\n","      <td>[butter, pepper, onion, cardamom, cayenne, gin...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>African,olive_oil,pepper,wheat,beef,onion,card...</td>\n","      <td>[olive_oil, pepper, wheat, beef, onion, cardam...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>African,honey,wheat,yeast</td>\n","      <td>[honey, wheat, yeast]</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>56493</th>\n","      <td>WesternEuropean,cane_molasses,butter,wheat,whi...</td>\n","      <td>[cane_molasses, butter, wheat, whiskey, vanill...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>56494</th>\n","      <td>WesternEuropean,lemon_juice,wheat,onion,parsle...</td>\n","      <td>[lemon_juice, wheat, onion, parsley, celery, n...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>56495</th>\n","      <td>WesternEuropean,butter,wheat,onion,beef,bacon,...</td>\n","      <td>[butter, wheat, onion, beef, bacon, black_pepp...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>56496</th>\n","      <td>WesternEuropean,lemon,onion,black_pepper,white...</td>\n","      <td>[lemon, onion, black_pepper, white_wine, celer...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>56497</th>\n","      <td>WesternEuropean,butter,cheese,wheat,ham,black_...</td>\n","      <td>[butter, cheese, wheat, ham, black_pepper, par...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>56498 rows × 383 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a7654ae-f18b-4ee2-a7d2-c9f86854cdbd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8a7654ae-f18b-4ee2-a7d2-c9f86854cdbd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8a7654ae-f18b-4ee2-a7d2-c9f86854cdbd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["recipe_count1 = recipe_count.drop(['recipes','ingredients'],axis=1)\n","recipe_count2 = recipe_count1.sum(axis=0)\n","total = recipe_count2.sum()\n","recipe_count3 = recipe_count2/float(total)\n","recipe_count4= recipe_count3/recipe_count3.max()\n","recipe_count5= pd.DataFrame(recipe_count4)\n","recipe_count5['ingredient name'] = recipe_count5.index\n","recipe_count5.columns = ['prevalence','ingredient name']\n","ingr_count = pd.merge(ingr,recipe_count5,on='ingredient name')"],"metadata":{"id":"yHeuKXjAz22o"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ingr_count"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"13cwQrec1t4b","executionInfo":{"status":"ok","timestamp":1678692075764,"user_tz":-60,"elapsed":18,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"1dd70526-1389-43ac-e831-0f44650ab844"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            ingredient name          category  prevalence\n","0                  mackerel      fish/seafood    0.002100\n","1              black_pepper             spice    0.465467\n","2             peanut_butter  plant derivative    0.047492\n","3    black_mustard_seed_oil  plant derivative    0.001336\n","4                celery_oil  plant derivative    0.047444\n","..                      ...               ...         ...\n","376        lilac_flower_oil  plant derivative    0.000048\n","377                  cashew    nut/seed/pulse    0.009498\n","378              star_anise             spice    0.004343\n","379               green_tea  plant derivative    0.001527\n","380          munster_cheese             dairy    0.001289\n","\n","[381 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-10bb57db-2ef8-48ca-bda7-0ddf2d22acf2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ingredient name</th>\n","      <th>category</th>\n","      <th>prevalence</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>mackerel</td>\n","      <td>fish/seafood</td>\n","      <td>0.002100</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>black_pepper</td>\n","      <td>spice</td>\n","      <td>0.465467</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>peanut_butter</td>\n","      <td>plant derivative</td>\n","      <td>0.047492</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>black_mustard_seed_oil</td>\n","      <td>plant derivative</td>\n","      <td>0.001336</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>celery_oil</td>\n","      <td>plant derivative</td>\n","      <td>0.047444</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>376</th>\n","      <td>lilac_flower_oil</td>\n","      <td>plant derivative</td>\n","      <td>0.000048</td>\n","    </tr>\n","    <tr>\n","      <th>377</th>\n","      <td>cashew</td>\n","      <td>nut/seed/pulse</td>\n","      <td>0.009498</td>\n","    </tr>\n","    <tr>\n","      <th>378</th>\n","      <td>star_anise</td>\n","      <td>spice</td>\n","      <td>0.004343</td>\n","    </tr>\n","    <tr>\n","      <th>379</th>\n","      <td>green_tea</td>\n","      <td>plant derivative</td>\n","      <td>0.001527</td>\n","    </tr>\n","    <tr>\n","      <th>380</th>\n","      <td>munster_cheese</td>\n","      <td>dairy</td>\n","      <td>0.001289</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>381 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-10bb57db-2ef8-48ca-bda7-0ddf2d22acf2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-10bb57db-2ef8-48ca-bda7-0ddf2d22acf2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-10bb57db-2ef8-48ca-bda7-0ddf2d22acf2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["df_backbone = pd.merge(df_weights,ingr_count, left_on=0, right_on='ingredient name').drop('ingredient name',axis=1)\n","\n","df_backbone.to_csv('/content/drive/Shareddrives/MLNS/Project/Codes/Data/new_data/backbone.csv',index=False)\n","#use this csv in cytoscape to make the final graph"],"metadata":{"id":"haf_lATX1t0D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# check how we can plot it\n","df_backbone"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"6_GAdVv4ziLD","executionInfo":{"status":"ok","timestamp":1678692143597,"user_tz":-60,"elapsed":23,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"f5608491-8800-4942-9861-9a6533ea8f5d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      0                  1   2        category  prevalence\n","0     black_sesame_seed             nutmeg  12  nut/seed/pulse    0.001241\n","1     black_sesame_seed               seed  17  nut/seed/pulse    0.001241\n","2     black_sesame_seed           rapeseed  17  nut/seed/pulse    0.001241\n","3                nutmeg  black_sesame_seed  12           spice    0.119899\n","4                nutmeg           cinnamon  20           spice    0.119899\n","...                 ...                ...  ..             ...         ...\n","1465           lavender           gardenia   5          flower    0.002959\n","1466           lavender             flower   5          flower    0.002959\n","1467           lavender          carnation   5          flower    0.002959\n","1468             almond     roasted_almond   9  nut/seed/pulse    0.110735\n","1469     roasted_almond             almond   9  nut/seed/pulse    0.000143\n","\n","[1470 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-c0c73863-04e9-4d18-b800-b435c641dba1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>category</th>\n","      <th>prevalence</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>black_sesame_seed</td>\n","      <td>nutmeg</td>\n","      <td>12</td>\n","      <td>nut/seed/pulse</td>\n","      <td>0.001241</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>black_sesame_seed</td>\n","      <td>seed</td>\n","      <td>17</td>\n","      <td>nut/seed/pulse</td>\n","      <td>0.001241</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>black_sesame_seed</td>\n","      <td>rapeseed</td>\n","      <td>17</td>\n","      <td>nut/seed/pulse</td>\n","      <td>0.001241</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>nutmeg</td>\n","      <td>black_sesame_seed</td>\n","      <td>12</td>\n","      <td>spice</td>\n","      <td>0.119899</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>nutmeg</td>\n","      <td>cinnamon</td>\n","      <td>20</td>\n","      <td>spice</td>\n","      <td>0.119899</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1465</th>\n","      <td>lavender</td>\n","      <td>gardenia</td>\n","      <td>5</td>\n","      <td>flower</td>\n","      <td>0.002959</td>\n","    </tr>\n","    <tr>\n","      <th>1466</th>\n","      <td>lavender</td>\n","      <td>flower</td>\n","      <td>5</td>\n","      <td>flower</td>\n","      <td>0.002959</td>\n","    </tr>\n","    <tr>\n","      <th>1467</th>\n","      <td>lavender</td>\n","      <td>carnation</td>\n","      <td>5</td>\n","      <td>flower</td>\n","      <td>0.002959</td>\n","    </tr>\n","    <tr>\n","      <th>1468</th>\n","      <td>almond</td>\n","      <td>roasted_almond</td>\n","      <td>9</td>\n","      <td>nut/seed/pulse</td>\n","      <td>0.110735</td>\n","    </tr>\n","    <tr>\n","      <th>1469</th>\n","      <td>roasted_almond</td>\n","      <td>almond</td>\n","      <td>9</td>\n","      <td>nut/seed/pulse</td>\n","      <td>0.000143</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1470 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c0c73863-04e9-4d18-b800-b435c641dba1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c0c73863-04e9-4d18-b800-b435c641dba1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c0c73863-04e9-4d18-b800-b435c641dba1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","source":[],"metadata":{"id":"dnYiDc272yXA"}},{"cell_type":"markdown","source":["# Recipe Classification"],"metadata":{"id":"PctitH9C27mP"}},{"cell_type":"code","source":["'''Classify recipes into regional cuisines based on ingredients or flavors, using logistic regresion, SVM, randomforest, MultinomialNB, and plot confusion_matrix\n","'''\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import pickle\n","\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn import svm\n","from sklearn.naive_bayes import MultinomialNB\n","# from sklearn import cross_validation, grid_search\n","# from sklearn.model_selection import train_test_split\n","from sklearn.model_selection import KFold, train_test_split\n","from sklearn import metrics\n","from sklearn.metrics import confusion_matrix, classification_report"],"metadata":{"id":"OeF2hgQIzJrT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def logistic_test(X,y):\n","    X_train, X_test, y_train, y_test = train_test_split(X,y,random_state=10)\n","    model = LogisticRegression()\n","    model.fit(X_train, y_train)\n","    y_pred = model.predict(X_test)\n","    print('First round:',metrics.accuracy_score(y_test,y_pred))\n","    #tune parameter C\n","    crange =[0.01,0.1,1,10,100]\n","    for num in crange:\n","        model = LogisticRegression(C=num)\n","        model.fit(X_train, y_train)\n","        y_pred = model.predict(X_test)\n","        print('C=', num, ',score=', metrics.accuracy_score(y_test,y_pred))\n"],"metadata":{"id":"JiVxliAY3wBJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def svm_test(X,y):\n","    X_train, X_test, y_train, y_test = train_test_split(X,y,random_state=10)\n","    model = svm.LinearSVC(C=1)\n","    model.fit(X_train, y_train)\n","    y_pred = model.predict(X_test)\n","    print('First round:',metrics.accuracy_score(y_test,y_pred))\n","    #tune parameter C\n","    crange =[0.01,0.1,1,10,100]\n","    for num in crange:\n","        model = svm.LinearSVC(C=num)\n","        model.fit(X_train, y_train)\n","        y_pred = model.predict(X_test)\n","        print('C=', num, ',score=', metrics.accuracy_score(y_test,y_pred))"],"metadata":{"id":"Y40NGqOE48S-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def nb_test(X,y):\n","    X_train, X_test, y_train, y_test = train_test_split(X,y,random_state=1)\n","    model = MultinomialNB()\n","    model.fit(X_train, y_train)\n","    y_pred = model.predict(X_test)\n","    print(metrics.accuracy_score(y_test,y_pred))"],"metadata":{"id":"jiVkzTVc48QG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def rf_test(X,y):\n","    X_train, X_test, y_train, y_test = train_test_split(X,y,random_state=10)\n","    rf_model = RandomForestClassifier(n_estimators = 100, n_jobs=-1)\n","    rf_model.fit(X_train, y_train)\n","    y_pred = rf_model.predict(X_test)\n","    print(metrics.accuracy_score(y_test,y_pred))"],"metadata":{"id":"d1jc5uPO5I3_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#plot confusion_matrix, 'col' is the y target\n","def plot_confusion_matrix(cm, col, title, cmap=plt.cm.viridis):\n","    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n","    for i in range(cm.shape[0]):\n","        plt.annotate(\"%.2f\" %cm[i][i],xy=(i,i),\n","                    horizontalalignment='center',\n","                    verticalalignment='center')\n","    plt.title(title,fontsize=18)\n","    plt.colorbar(fraction=0.046, pad=0.04)\n","    tick_marks = np.arange(len(col.unique()))\n","    plt.xticks(tick_marks, sorted(col.unique()),rotation=90)\n","    plt.yticks(tick_marks, sorted(col.unique()))\n","    plt.tight_layout()\n","    plt.ylabel('True label',fontsize=18)\n","    plt.xlabel('Predicted label',fontsize=18)"],"metadata":{"id":"X7FrhMGv5I0e"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#using flavor network to project recipes from ingredient matrix to flavor matrix\n","def flavor_profile(df,ingr,comp,ingr_comp):\n","    sorted_ingredients = df.columns\n","    underscore_ingredients=[]\n","    for item in sorted_ingredients:\n","        underscore_ingredients.append(item.replace(' ','_'))\n","\n","    print(len(underscore_ingredients), len(sorted_ingredients))\n","\n","    ingr_total = ingr_comp.join(ingr,how='right',on='# ingredient id')\n","    ingr_total = ingr_total.join(comp,how='right',on='compound id')\n","\n","    ingr_pivot = pd.crosstab(ingr_total['ingredient name'],ingr_total['compound id'])\n","    ingr_flavor = ingr_pivot[ingr_pivot.index.isin(underscore_ingredients)]\n","\n","    df_flavor = df.values.dot(ingr_flavor.values)\n","    print(df.shape, df_flavor.shape)\n","\n","    return df_flavor"],"metadata":{"id":"LaMbhUKa5IyZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#normalize flavor matrix with tfidf method\n","def make_tfidf(arr):\n","    '''input, numpy array with flavor counts for each recipe and compounds\n","    return numpy array adjusted as tfidf\n","    '''\n","    arr2 = arr.copy()\n","    N=arr2.shape[0]\n","    l2_rows = np.sqrt(np.sum(arr2**2, axis=1)).reshape(N, 1)\n","    l2_rows[l2_rows==0]=1\n","    arr2_norm = arr2/l2_rows\n","\n","    arr2_freq = np.sum(arr2_norm>0, axis=0)\n","    arr2_idf = np.log(float(N+1) / (1.0 + arr2_freq)) + 1.0\n","\n","    from sklearn.preprocessing import normalize\n","    tfidf = np.multiply(arr2_norm, arr2_idf)\n","    tfidf = normalize(tfidf, norm='l2', axis=1)\n","    print(tfidf.shape)\n","    return tfidf"],"metadata":{"id":"w9k9u0tg5IwK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["yum_clean = pd.read_pickle('/content/drive/Shareddrives/MLNS/Project/Codes/Data/new_data/yummly_clean.pkl')\n","yum_clean"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":693},"id":"zBpxlHII5IuT","executionInfo":{"status":"ok","timestamp":1679837135734,"user_tz":-120,"elapsed":219,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"8b2ed228-b1c4-4f23-d13b-a7d8c610fe96"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0                                                 id  \\\n","0              0                Southern-Cornbread-Dressing-1357820   \n","1              3            Disappearing-buffalo-chicken-dip-297712   \n","2              4                      Classic-macaroni-salad-304692   \n","3              5                            Classic-coleslaw-303481   \n","4             10  Buffalo-Turkey-Burgers-with-Buffalo-Blue-Chees...   \n","...          ...                                                ...   \n","6783         494                    Thai-Coconut-Shrimp-Soup-901927   \n","6784         495                   Thai-Style-Broiled-Shrimp-779084   \n","6785         496                       Pad-Thai-French-Fries-984208   \n","6786         497                 Spicy-Thai-Lobster-Soup-My-Recipes   \n","6787         499   Thai-Salad-with-Peanut-Dressing-MyRecipes-213423   \n","\n","                                             recipeName  rating  \\\n","0                           Southern Cornbread Dressing       4   \n","1                      Disappearing Buffalo Chicken Dip       4   \n","2                                Classic Macaroni Salad       4   \n","3                                      Classic Coleslaw       4   \n","4     Buffalo Turkey Burgers with Buffalo Blue Chees...       4   \n","...                                                 ...     ...   \n","6783                           Thai Coconut Shrimp Soup       3   \n","6784                          Thai-Style Broiled Shrimp       3   \n","6785                              Pad Thai French Fries       4   \n","6786                            Spicy Thai Lobster Soup       4   \n","6787                    Thai Salad with Peanut Dressing       4   \n","\n","      totalTimeInSeconds                 course               cuisine  \\\n","0                 3600.0                    NaN  Southern & Soul Food   \n","1                 2100.0           [Appetizers]              American   \n","2                 1500.0  [Salads, Side Dishes]              American   \n","3                  600.0  [Salads, Side Dishes]  Southern & Soul Food   \n","4                 1380.0          [Main Dishes]              American   \n","...                  ...                    ...                   ...   \n","6783              1500.0                [Soups]                  Thai   \n","6784               600.0                    NaN                  Thai   \n","6785              1800.0                    NaN                  Thai   \n","6786              3300.0   [Main Dishes, Soups]                  Thai   \n","6787               900.0               [Salads]                  Thai   \n","\n","                                            ingredients  \\\n","0     [buttermilk cornbread, sandwich bread, salt, b...   \n","1     [light mayonnaise, lemon juice, cayenne pepper...   \n","2     [elbow macaroni, hellmann' or best food real m...   \n","3     [hellmann' or best food real mayonnais, lemon ...   \n","4     [lean ground turkey, hot sauce, ranch-style se...   \n","...                                                 ...   \n","6783  [olive oil, large shrimp, carrots, garlic, gin...   \n","6784  [garlic cloves, thai chile, salt, sugar, fish ...   \n","6785  [sauce, fish sauce, cilantro, lime, peanuts, c...   \n","6786  [lobster, vegetable oil, asian, fish, lime rin...   \n","6787  [water, rice vinegar, green onions, reduced fa...   \n","\n","                                      clean ingredients  \n","0     [buttermilk cornbread, sandwich bread, salt, b...  \n","1     [light mayonnaise, lemon juice, cayenne pepper...  \n","2     [elbow macaroni, hellmann or best food real ma...  \n","3     [hellmann or best food real mayonnais, lemon j...  \n","4     [lean ground turkey, hot sauce, ranch style se...  \n","...                                                 ...  \n","6783  [olive oil,  shrimp, carrot, garlic, ginger, r...  \n","6784  [garlic clove, thai chile, salt, sugar, fish s...  \n","6785  [sauce, fish sauce, cilantro, lime, peanut, cr...  \n","6786  [lobster, vegetable oil, asian, fish, lime rin...  \n","6787  [water, rice vinegar, green onion,  chunky pea...  \n","\n","[6788 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-7fe56598-9d8b-4c1f-823f-41995042610e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>id</th>\n","      <th>recipeName</th>\n","      <th>rating</th>\n","      <th>totalTimeInSeconds</th>\n","      <th>course</th>\n","      <th>cuisine</th>\n","      <th>ingredients</th>\n","      <th>clean ingredients</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Southern-Cornbread-Dressing-1357820</td>\n","      <td>Southern Cornbread Dressing</td>\n","      <td>4</td>\n","      <td>3600.0</td>\n","      <td>NaN</td>\n","      <td>Southern &amp; Soul Food</td>\n","      <td>[buttermilk cornbread, sandwich bread, salt, b...</td>\n","      <td>[buttermilk cornbread, sandwich bread, salt, b...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>Disappearing-buffalo-chicken-dip-297712</td>\n","      <td>Disappearing Buffalo Chicken Dip</td>\n","      <td>4</td>\n","      <td>2100.0</td>\n","      <td>[Appetizers]</td>\n","      <td>American</td>\n","      <td>[light mayonnaise, lemon juice, cayenne pepper...</td>\n","      <td>[light mayonnaise, lemon juice, cayenne pepper...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>Classic-macaroni-salad-304692</td>\n","      <td>Classic Macaroni Salad</td>\n","      <td>4</td>\n","      <td>1500.0</td>\n","      <td>[Salads, Side Dishes]</td>\n","      <td>American</td>\n","      <td>[elbow macaroni, hellmann' or best food real m...</td>\n","      <td>[elbow macaroni, hellmann or best food real ma...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5</td>\n","      <td>Classic-coleslaw-303481</td>\n","      <td>Classic Coleslaw</td>\n","      <td>4</td>\n","      <td>600.0</td>\n","      <td>[Salads, Side Dishes]</td>\n","      <td>Southern &amp; Soul Food</td>\n","      <td>[hellmann' or best food real mayonnais, lemon ...</td>\n","      <td>[hellmann or best food real mayonnais, lemon j...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10</td>\n","      <td>Buffalo-Turkey-Burgers-with-Buffalo-Blue-Chees...</td>\n","      <td>Buffalo Turkey Burgers with Buffalo Blue Chees...</td>\n","      <td>4</td>\n","      <td>1380.0</td>\n","      <td>[Main Dishes]</td>\n","      <td>American</td>\n","      <td>[lean ground turkey, hot sauce, ranch-style se...</td>\n","      <td>[lean ground turkey, hot sauce, ranch style se...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6783</th>\n","      <td>494</td>\n","      <td>Thai-Coconut-Shrimp-Soup-901927</td>\n","      <td>Thai Coconut Shrimp Soup</td>\n","      <td>3</td>\n","      <td>1500.0</td>\n","      <td>[Soups]</td>\n","      <td>Thai</td>\n","      <td>[olive oil, large shrimp, carrots, garlic, gin...</td>\n","      <td>[olive oil,  shrimp, carrot, garlic, ginger, r...</td>\n","    </tr>\n","    <tr>\n","      <th>6784</th>\n","      <td>495</td>\n","      <td>Thai-Style-Broiled-Shrimp-779084</td>\n","      <td>Thai-Style Broiled Shrimp</td>\n","      <td>3</td>\n","      <td>600.0</td>\n","      <td>NaN</td>\n","      <td>Thai</td>\n","      <td>[garlic cloves, thai chile, salt, sugar, fish ...</td>\n","      <td>[garlic clove, thai chile, salt, sugar, fish s...</td>\n","    </tr>\n","    <tr>\n","      <th>6785</th>\n","      <td>496</td>\n","      <td>Pad-Thai-French-Fries-984208</td>\n","      <td>Pad Thai French Fries</td>\n","      <td>4</td>\n","      <td>1800.0</td>\n","      <td>NaN</td>\n","      <td>Thai</td>\n","      <td>[sauce, fish sauce, cilantro, lime, peanuts, c...</td>\n","      <td>[sauce, fish sauce, cilantro, lime, peanut, cr...</td>\n","    </tr>\n","    <tr>\n","      <th>6786</th>\n","      <td>497</td>\n","      <td>Spicy-Thai-Lobster-Soup-My-Recipes</td>\n","      <td>Spicy Thai Lobster Soup</td>\n","      <td>4</td>\n","      <td>3300.0</td>\n","      <td>[Main Dishes, Soups]</td>\n","      <td>Thai</td>\n","      <td>[lobster, vegetable oil, asian, fish, lime rin...</td>\n","      <td>[lobster, vegetable oil, asian, fish, lime rin...</td>\n","    </tr>\n","    <tr>\n","      <th>6787</th>\n","      <td>499</td>\n","      <td>Thai-Salad-with-Peanut-Dressing-MyRecipes-213423</td>\n","      <td>Thai Salad with Peanut Dressing</td>\n","      <td>4</td>\n","      <td>900.0</td>\n","      <td>[Salads]</td>\n","      <td>Thai</td>\n","      <td>[water, rice vinegar, green onions, reduced fa...</td>\n","      <td>[water, rice vinegar, green onion,  chunky pea...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6788 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7fe56598-9d8b-4c1f-823f-41995042610e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7fe56598-9d8b-4c1f-823f-41995042610e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7fe56598-9d8b-4c1f-823f-41995042610e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["def elim_Unnamed(the_df):\n","    cols_to_drop = [col for col in the_df.columns if col.startswith('Unnamed:')]\n","    the_df=the_df.drop(cols_to_drop, axis=1)\n","    return the_df "],"metadata":{"id":"-sEKJS3zFbE4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["yum_clean=elim_Unnamed(yum_clean)\n","yum_clean.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"8nCyXk8QFdBN","executionInfo":{"status":"ok","timestamp":1679837146272,"user_tz":-120,"elapsed":216,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"e8639ceb-7221-455e-a37a-0dbc6b8da432"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                  id  \\\n","0                Southern-Cornbread-Dressing-1357820   \n","1            Disappearing-buffalo-chicken-dip-297712   \n","2                      Classic-macaroni-salad-304692   \n","3                            Classic-coleslaw-303481   \n","4  Buffalo-Turkey-Burgers-with-Buffalo-Blue-Chees...   \n","\n","                                          recipeName  rating  \\\n","0                        Southern Cornbread Dressing       4   \n","1                   Disappearing Buffalo Chicken Dip       4   \n","2                             Classic Macaroni Salad       4   \n","3                                   Classic Coleslaw       4   \n","4  Buffalo Turkey Burgers with Buffalo Blue Chees...       4   \n","\n","   totalTimeInSeconds                 course               cuisine  \\\n","0              3600.0                    NaN  Southern & Soul Food   \n","1              2100.0           [Appetizers]              American   \n","2              1500.0  [Salads, Side Dishes]              American   \n","3               600.0  [Salads, Side Dishes]  Southern & Soul Food   \n","4              1380.0          [Main Dishes]              American   \n","\n","                                         ingredients  \\\n","0  [buttermilk cornbread, sandwich bread, salt, b...   \n","1  [light mayonnaise, lemon juice, cayenne pepper...   \n","2  [elbow macaroni, hellmann' or best food real m...   \n","3  [hellmann' or best food real mayonnais, lemon ...   \n","4  [lean ground turkey, hot sauce, ranch-style se...   \n","\n","                                   clean ingredients  \n","0  [buttermilk cornbread, sandwich bread, salt, b...  \n","1  [light mayonnaise, lemon juice, cayenne pepper...  \n","2  [elbow macaroni, hellmann or best food real ma...  \n","3  [hellmann or best food real mayonnais, lemon j...  \n","4  [lean ground turkey, hot sauce, ranch style se...  "],"text/html":["\n","  <div id=\"df-acffd3e6-a6e7-4e78-804b-3ee85eba1746\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>recipeName</th>\n","      <th>rating</th>\n","      <th>totalTimeInSeconds</th>\n","      <th>course</th>\n","      <th>cuisine</th>\n","      <th>ingredients</th>\n","      <th>clean ingredients</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Southern-Cornbread-Dressing-1357820</td>\n","      <td>Southern Cornbread Dressing</td>\n","      <td>4</td>\n","      <td>3600.0</td>\n","      <td>NaN</td>\n","      <td>Southern &amp; Soul Food</td>\n","      <td>[buttermilk cornbread, sandwich bread, salt, b...</td>\n","      <td>[buttermilk cornbread, sandwich bread, salt, b...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Disappearing-buffalo-chicken-dip-297712</td>\n","      <td>Disappearing Buffalo Chicken Dip</td>\n","      <td>4</td>\n","      <td>2100.0</td>\n","      <td>[Appetizers]</td>\n","      <td>American</td>\n","      <td>[light mayonnaise, lemon juice, cayenne pepper...</td>\n","      <td>[light mayonnaise, lemon juice, cayenne pepper...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Classic-macaroni-salad-304692</td>\n","      <td>Classic Macaroni Salad</td>\n","      <td>4</td>\n","      <td>1500.0</td>\n","      <td>[Salads, Side Dishes]</td>\n","      <td>American</td>\n","      <td>[elbow macaroni, hellmann' or best food real m...</td>\n","      <td>[elbow macaroni, hellmann or best food real ma...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Classic-coleslaw-303481</td>\n","      <td>Classic Coleslaw</td>\n","      <td>4</td>\n","      <td>600.0</td>\n","      <td>[Salads, Side Dishes]</td>\n","      <td>Southern &amp; Soul Food</td>\n","      <td>[hellmann' or best food real mayonnais, lemon ...</td>\n","      <td>[hellmann or best food real mayonnais, lemon j...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Buffalo-Turkey-Burgers-with-Buffalo-Blue-Chees...</td>\n","      <td>Buffalo Turkey Burgers with Buffalo Blue Chees...</td>\n","      <td>4</td>\n","      <td>1380.0</td>\n","      <td>[Main Dishes]</td>\n","      <td>American</td>\n","      <td>[lean ground turkey, hot sauce, ranch-style se...</td>\n","      <td>[lean ground turkey, hot sauce, ranch style se...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-acffd3e6-a6e7-4e78-804b-3ee85eba1746')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-acffd3e6-a6e7-4e78-804b-3ee85eba1746 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-acffd3e6-a6e7-4e78-804b-3ee85eba1746');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["#create a set of all ingredients in the dataframe\n","yum_ingredients=set()\n","yum_clean['clean ingredients'].map(lambda x: [yum_ingredients.add(i) for i in x])\n","print(len(yum_ingredients))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UepWnNR_5IsP","executionInfo":{"status":"ok","timestamp":1679837150005,"user_tz":-120,"elapsed":192,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"cdd7627b-4376-4aaa-bdb3-d5567f2ef648"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3652\n"]}]},{"cell_type":"code","source":["#create one column for each ingredient, True or False\n","################################################ ESTO PUEDE MEJORARSE HACE COLS DE LOS INGREDIENTES Y HAY ALGUNAS QUE TIENEN VACÍOS\n","yum_c = yum_clean.copy()\n","# yum = yum_clean.copy()\n","for item in yum_ingredients:\n","    yum_c[item] = yum_c['clean ingredients'].apply(lambda x:item in x) \n","\n","yum_X = yum.drop(yum_clean.columns,axis=1)  "],"metadata":{"id":"-BzxMM-sEkxW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#test various classification models\n","logistic_test(yum_X, yum_c['cuisine'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DfgCclrxG7zs","executionInfo":{"status":"ok","timestamp":1679837691461,"user_tz":-120,"elapsed":105202,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"d8fda808-6c62-4db1-9f50-32e3db6424a4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["First round: 0.591632292280495\n","C= 0.01 ,score= 0.37536829699469654\n","C= 0.1 ,score= 0.5209192692987625\n","C= 1 ,score= 0.591632292280495\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"stream","name":"stdout","text":["C= 10 ,score= 0.5680612846199175\n","C= 100 ,score= 0.5450795521508545\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]}]},{"cell_type":"code","source":["svm_test(yum_X,yum['cuisine'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yryRK7mbH4uN","executionInfo":{"status":"ok","timestamp":1679837767588,"user_tz":-120,"elapsed":5193,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"1fcc864f-d211-4b0a-80fc-665bfde24c44"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["First round: 0.576900412492634\n","C= 0.01 ,score= 0.5604007071302298\n","C= 0.1 ,score= 0.6051856216853271\n","C= 1 ,score= 0.576900412492634\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/sklearn/svm/_base.py:1244: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["C= 10 ,score= 0.5197407189157337\n","C= 100 ,score= 0.4678845020624632\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/sklearn/svm/_base.py:1244: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["nb_test(yum_X,yum['cuisine'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YboA8-mZGimY","executionInfo":{"status":"ok","timestamp":1679837791358,"user_tz":-120,"elapsed":3918,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"1e88a358-1b04-481f-9e2e-bd39c6fdf7b8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.572775486152033\n"]}]},{"cell_type":"code","source":["rf_test(yum_X,yum['cuisine'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UZg-7YNdH_sf","executionInfo":{"status":"ok","timestamp":1679837814451,"user_tz":-120,"elapsed":10976,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"03f7b882-d361-4518-b43f-9efcb5ca3f47"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.5132586918090748\n"]}]},{"cell_type":"code","source":["#plot confusion_matrix with svm\n","X = yum_X.values\n","y = yum['cuisine']\n","X_train, X_test, y_train, y_test = train_test_split(X,y,random_state=10)\n","model = svm.LinearSVC(C=0.1)\n","model.fit(X_train, y_train)\n","y_pred = model.predict(X_test)\n","cm = confusion_matrix(y_test, y_pred)\n","np.set_printoptions(precision=2)\n","cm_normalized = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]\n","plt.figure(figsize=(10,10))\n","plot_confusion_matrix(cm_normalized, yum['cuisine'],title='Confusion Matrix based on ingredients')\n","# esta cosa está horrible, habrá que buscar un modelo que mejor se adapte,\n","# además de mejorar las variables\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":700},"id":"6H9nHan6EkvQ","executionInfo":{"status":"ok","timestamp":1679837890170,"user_tz":-120,"elapsed":4340,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"fb57f56a-77c5-4b6f-a95e-e665da311721"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#read pickled dataframe\n","yum_ingr = pd.read_pickle('/content/drive/Shareddrives/MLNS/Project/Codes/Data/new_data/yummly_ingr.pkl')\n","yum_tfidf = pd.read_pickle('/content/drive/Shareddrives/MLNS/Project/Codes/Data/new_data/yum_tfidf.pkl')"],"metadata":{"id":"z2DW9eI048NP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#plot confusion matrix for flavor-based classification\n","X = yum_tfidf.values\n","y = yum_ingr['cuisine']\n","X_train, X_test, y_train, y_test = train_test_split(X,y,random_state=10)\n","model = LogisticRegression()\n","model.fit(X_train, y_train)\n","y_pred = model.predict(X_test)\n","cm = confusion_matrix(y_test, y_pred)\n","np.set_printoptions(precision=2)\n","cm_normalized = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]\n","plt.figure(figsize=(10,10))\n","plot_confusion_matrix(cm_normalized, yum_ingr['cuisine'],title='Confusion Matrix based on flavor')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":839},"id":"NAXbepBfMme6","executionInfo":{"status":"ok","timestamp":1679838864378,"user_tz":-120,"elapsed":11391,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"271c0f64-e445-475f-8ced-0496b4aff810"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# Recipe Clustering"],"metadata":{"id":"vsUdHh46NSyk"}},{"cell_type":"code","source":["'''After recipes have been mapped to ingredient space and flavor space\n","Plot tsne clustering\n","Plot with bokeh interactive plotting\n","'''\n","\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","from scipy.spatial.distance import pdist, squareform\n","from sklearn.manifold import MDS, TSNE\n","\n","from bokeh.plotting import figure, output_file, show, ColumnDataSource\n","from bokeh.models import HoverTool"],"metadata":{"id":"Vk7vDrH448J9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#take some regional cuisines, tsne clustering, and plotting\n","def tsne_cluster_cuisine(df,sublist):\n","    lenlist=[0]\n","    df_sub = df[df['cuisine']==sublist[0]]\n","    lenlist.append(df_sub.shape[0])\n","    for cuisine in sublist[1:]:\n","        temp = df[df['cuisine']==cuisine]\n","        df_sub = pd.concat([df_sub, temp],axis=0,ignore_index=True)\n","        lenlist.append(df_sub.shape[0])\n","    df_X = df_sub.drop(['cuisine','recipeName'],axis=1)\n","    print(df_X.shape, lenlist)\n","\n","    dist = squareform(pdist(df_X, metric='cosine'))\n","    # tsne = TSNE(metric='precomputed').fit_transform(dist)\n","    # https://scikit-learn.org/stable/modules/generated/sklearn.manifold.TSNE.html\n","    tsne=TSNE(metric='precomputed',init='random').fit_transform(dist)\n","\n","    palette = sns.color_palette(\"hls\", len(sublist))\n","    plt.figure(figsize=(10,10))\n","    for i,cuisine in enumerate(sublist):\n","        plt.scatter(tsne[lenlist[i]:lenlist[i+1],0],\\\n","        tsne[lenlist[i]:lenlist[i+1],1],c=palette[i],label=sublist[i])\n","    plt.legend()"],"metadata":{"id":"Dc-6ssrXNX-2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#interactive plot with boken; set up for four categories, with color palette; pass in df for either ingredient or flavor\n","def plot_bokeh(df,sublist,filename):\n","    lenlist=[0]\n","    df_sub = df[df['cuisine']==sublist[0]]\n","    lenlist.append(df_sub.shape[0])\n","    for cuisine in sublist[1:]:\n","        temp = df[df['cuisine']==cuisine]\n","        df_sub = pd.concat([df_sub, temp],axis=0,ignore_index=True)\n","        lenlist.append(df_sub.shape[0])\n","    df_X = df_sub.drop(['cuisine','recipeName'],axis=1)\n","    print(df_X.shape, lenlist)\n","\n","    dist = squareform(pdist(df_X, metric='cosine'))\n","    # tsne = TSNE(metric='precomputed').fit_transform(dist)\n","    # https://scikit-learn.org/stable/modules/generated/sklearn.manifold.TSNE.html\n","    tsne=TSNE(metric='precomputed',init='random').fit_transform(dist)\n","    #cannot use seaborn palette for bokeh\n","    palette =['red','green','blue','yellow']\n","    colors =[]\n","    for i in range(len(sublist)):\n","        for j in range(lenlist[i+1]-lenlist[i]):\n","            colors.append(palette[i])\n","    #plot with boken\n","    output_file(filename)\n","    source = ColumnDataSource(\n","            data=dict(x=tsne[:,0],y=tsne[:,1],\n","                cuisine = df_sub['cuisine'],\n","                recipe = df_sub['recipeName']))\n","\n","    hover = HoverTool(tooltips=[\n","                (\"cuisine\", \"@cuisine\"),\n","                (\"recipe\", \"@recipe\")])\n","\n","    p = figure(plot_width=1000, plot_height=1000, tools=[hover],\n","               title=\"flavor clustering\")\n","\n","    p.circle('x', 'y', size=10, source=source,fill_color=colors)\n","\n","    show(p)\n"],"metadata":{"id":"C5Ic2zAuNX7d"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["yum_ingr = pd.read_pickle('/content/drive/Shareddrives/MLNS/Project/Codes/Data/new_data/yummly_ingr.pkl')\n","yum_ingrX = pd.read_pickle('/content/drive/Shareddrives/MLNS/Project/Codes/Data/new_data/yummly_ingrX.pkl')\n","yum_tfidf = pd.read_pickle('/content/drive/Shareddrives/MLNS/Project/Codes/Data/new_data/yum_tfidf.pkl')"],"metadata":{"id":"kNvE6qNaNX4t"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#select four cuisines and plot tsne clustering with ingredients\n","sublist = ['Italian','French','Japanese','Indian']\n","df_ingr = yum_ingrX.copy()\n","df_ingr['cuisine'] = yum_ingr['cuisine']\n","df_ingr['recipeName'] = yum_ingr['recipeName']\n","tsne_cluster_cuisine(df_ingr,sublist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":664},"id":"1VrFHsKyNX1-","executionInfo":{"status":"ok","timestamp":1679853964328,"user_tz":-120,"elapsed":7324,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"1e96811f-56a4-4a41-dd64-ff49b3a8cdee"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(1018, 236) [0, 341, 543, 741, 1018]\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-6-222cf1dd0bcd>:21: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n","  plt.scatter(tsne[lenlist[i]:lenlist[i+1],0],\\\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#select four cuisines and plot tsne clustering with flavor\n","sublist = ['Italian','French','Japanese','Indian']\n","df_flavor = yum_tfidf.copy()\n","df_flavor['cuisine'] = yum_ingr['cuisine']\n","df_flavor['recipeName'] = yum_ingr['recipeName']\n","tsne_cluster_cuisine(df_flavor,sublist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":664},"id":"6zk1xsrg48G_","executionInfo":{"status":"ok","timestamp":1679853985648,"user_tz":-120,"elapsed":10456,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"7b81b4a7-8f15-4ece-cecb-24f62a4ce0fd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(1015, 1107) [0, 338, 540, 738, 1015]\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-6-222cf1dd0bcd>:21: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n","  plt.scatter(tsne[lenlist[i]:lenlist[i+1],0],\\\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":[],"metadata":{"id":"1VARd7zbIdJU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df=df_flavor\n","lenlist=[0]\n","df_sub = df[df['cuisine']==sublist[0]]\n","lenlist.append(df_sub.shape[0])\n","for cuisine in sublist[1:]:\n","    temp = df[df['cuisine']==cuisine]\n","    df_sub = pd.concat([df_sub, temp],axis=0,ignore_index=True)\n","    lenlist.append(df_sub.shape[0])\n","df_X = df_sub.drop(['cuisine','recipeName'],axis=1)\n","print(df_X.shape, lenlist)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9JuoNpYoGc6X","executionInfo":{"status":"ok","timestamp":1679854051938,"user_tz":-120,"elapsed":200,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"f79449a8-3735-41e8-8edc-29fae258e0bf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(1015, 1107) [0, 338, 540, 738, 1015]\n"]}]},{"cell_type":"code","source":["dist = squareform(pdist(df_X, metric='cosine'))\n","# tsne = TSNE(metric='precomputed').fit_transform(dist)\n","# https://scikit-learn.org/stable/modules/generated/sklearn.manifold.TSNE.html\n","tsne=TSNE(metric='precomputed',init='random').fit_transform(dist)\n","#cannot use seaborn palette for bokeh\n","palette =['red','green','blue','yellow']\n","colors =[]\n","for i in range(len(sublist)):\n","    for j in range(lenlist[i+1]-lenlist[i]):\n","        colors.append(palette[i])"],"metadata":{"id":"ikz0xy6OG26K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"EYWDkRyDJCYw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tsne"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fGUyqVfdH264","executionInfo":{"status":"ok","timestamp":1679854369317,"user_tz":-120,"elapsed":209,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"e11af8ba-e97b-4544-8aca-53141311507b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 25.031736  ,   2.6009738 ],\n","       [  7.047697  ,   8.761232  ],\n","       [ -0.63767844,  14.154426  ],\n","       ...,\n","       [-21.73255   , -16.994081  ],\n","       [-26.390305  ,  -9.562247  ],\n","       [-25.735807  ,  -9.983771  ]], dtype=float32)"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["#plot with boken\n","output_file('test1.html')\n","source = ColumnDataSource(\n","        data=dict(x=tsne[:,0],y=tsne[:,1],\n","            cuisine = df_sub['cuisine'],\n","            recipe = df_sub['recipeName']))"],"metadata":{"id":"4dm4-gh9HIPk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dict(x=tsne[:,0],y=tsne[:,1],\n","            cuisine = df_sub['cuisine'],\n","            recipe = df_sub['recipeName'])"],"metadata":{"id":"6AVVykC6KgUM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["hover = HoverTool(tooltips=[\n","            (\"cuisine\", \"@cuisine\"),\n","            (\"recipe\", \"@recipe\")])"],"metadata":{"id":"cmojyiAVHOXW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["p = figure(plot_width=1000, plot_height=1000, tools=[hover],\n","            title=\"flavor clustering\")"],"metadata":{"id":"TDPbjHO0HRVM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ColumnDataSource(\n","        data=dict(x=tsne[:,0],y=tsne[:,1],\n","            cuisine = df_sub['cuisine'],\n","            recipe = df_sub['recipeName']))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"0BhObOvqHms0","executionInfo":{"status":"ok","timestamp":1679854337691,"user_tz":-120,"elapsed":294,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"8c420355-f6b4-4b23-cf8a-6f3ef40e678e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ColumnDataSource(id='1035', ...)"],"text/html":["<div style=\"display: table;\"><div style=\"display: table-row;\"><div style=\"display: table-cell;\"><b title=\"bokeh.models.sources.ColumnDataSource\">ColumnDataSource</b>(</div><div style=\"display: table-cell;\">id&nbsp;=&nbsp;'1035', <span id=\"1037\" style=\"cursor: pointer;\">&hellip;)</span></div></div><div class=\"1036\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">data&nbsp;=&nbsp;{'cuisine': ['Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'Italian', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'French', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Japanese', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian', 'Indian'], 'recipe': ['Prosciutto, Pesto & Fresh Mozzarella Panini', 'Italian Pasta In Red And White Sauce', 'Tuscan Soup', 'Easy Italian Pasta Bake', 'Stuffed Peppers with Ricotta and Italian Sausage', 'Cheesy Italian Rolls', 'Italian-Style Fried Brussel Sprouts', 'Tortellini & Italian Sausage Bake', 'Italian Dinner Soup', 'Italian-Style Ground Beef Skillet', 'Italian Stuffed Shells', 'Spaghetti alla Carbonara', 'Spaghetti Alla Marinara', 'Italian Pear Almond Cake', 'Italian Shrimp and Grits', 'Italian Sausage, Kale and Tortellini Soup', 'Baked Eggs Italian-Style', 'One Pot Cheesy Italian Chicken and Pasta', 'Italian Minestrone Soup â\\x80\\x93 Ancient Romansâ\\x80\\x99 Favorite Soup', 'Fresh Pesto with Ricotta', 'Italian Wedding Soup with Escarole', 'Simple Italian Omelet', '{Easy Dinner Recipe} Italian Chicken Bake', 'Italian Chicken Noodle Soup', 'Italian Dumplings', 'Easy Italian Tilapia Parmesan', 'Italian Meatballs', 'Crock Pot Italian Meatballs', 'Italian Butter Beans', 'Italian Chicken Soup - Pastina !', 'Italian Beef and Ravioli Stew', 'Rustic Italian Chicken Cacciatore', 'Vegetable Lasagna for All Seasons', 'Baked Ziti', 'Bucatini Carbonara', 'Italian Delicacy â\\x80\\x93 Tagliatelle with Smoked Salmon', 'Bolognese Sauce', 'Fresh Tomato and Ricotta Whole Wheat Pasta', 'Italian Sausage Soup with White Beans and Spinach', 'Buffalo Mozzarella & Burrata Pizza', 'Chicken Minestrone alla All Our Way', 'Bolognese Sauce', 'Worldâ\\x80\\x99s Best Lasagna', 'Garlic Bread Meatball Casserole', 'Parmesan-crusted Bruschetta Chicken ', 'Beef, Spinach, & Mushroom Lasagna', 'Creamy Basil Parmesan Italian Soup', 'Italian Garlic Bread', 'Lasagna Rollups', 'FRESH TAGLIATELLE WITH GARLIC, RUCOLA & SUNDRIED TOMATOES', 'Cheesy Italian Meatloaf', 'Lasagna', 'Lasagna Soup', 'Italian-Style Meatballs', 'Spaghetti alla Puttanesca', 'Italian Sausage Soup', 'Italian Sausage Pasta', 'Italian Vegan Garbanzo Bean Soup', 'Linguine with Cauliflower and Prosciutto', 'Spaghetti alla Carbonara', 'Baked Ziti', 'Polenta', 'Homemade Italian dressing', 'Easy Italian Stuffed Artichokes', 'Italian Grilled Cheese Bites', 'Italian Easter bread â\\x80\\x93 Pane di Pasqua', 'Italian Baked Ziti', 'Homemade Italian Popcorn Seasoning', 'Spicy Italian Sausage and Peppers Pizza', 'Freezer Friendly Lasagna', 'Spinach and Ricotta Lazy Lasagna', 'Chicken Mozzarella Pasta', 'Authentic, Classic Spaghetti Carbonara', 'Eggplant Rollatini', 'Fried Italian Herb Macaroni', 'Sun-Dried Tomato Risotto', 'Mushroom & Pancetta Spaghetti', 'Slow Cooker Lasagna', 'Hot & Spicy Italian Drip Beef', 'Ricotta Cheese Gnocchi', 'Italian Style Soup with Turkey Sausage', 'Chicken Alfredo With Plum Tomatoes', 'Marinara Sauce', 'Risotto alla Milanese', 'Cherry And Apricot Focaccia With Rosemary', 'Pasta Carbonara', 'Chicken Piccata', 'Easy Skillet Lasagna', 'A Hearty Spaghetti Bolognese', 'Slow Cooker Italian Wedding Soup', 'Italian Fettucine Alfredo', 'Tortellini Soup', 'Italian Stuffed Chicken', 'Braised Italian Chicken with Green Beans, Tomatoes & Olives', 'Italian Seasoning', 'Crockpot Italian Meatballs | Perfect For Dinner or Game Day!', 'Basic Italian Polenta', 'Bruschetta', 'Mushroom Risotto', 'Spaghetti alla Carbonara', 'Pasta With Tomatoes, Capers, Olives and Breadcrumbs', 'Italian Eggplant Cheese Melts', 'Italian Crescent Casserole', 'Chestnut and Pear Ravioli with Saged Brown Butter', 'Italian Marinara Sauce', 'Gnocchi with Turkey and White Beans', 'Italian Pesto', 'Traditional Italian Meatballs with Sunday Gravy', 'Three Ingredient Italian Sausage and Mushroom Bolognese', 'Italian Chicken Soup', 'Roman-Style Spaghetti Alla Carbonara', 'Simple Garlic Bread', 'Baked Italian Meatballs', 'Porcini Mushroom Risotto', 'Caprese Salad', 'Italian Risotto', 'Sausage, Peppers, and Onions', 'Italian Lentil Soup', 'Keto Italian Omelet', 'Creamy Zoodles alla Carbonara', 'SPAGHETTI CARBONARA', 'Italian Veal Scallopini', 'Tuscan Herb Dipping Oil Recipe!', 'Tuscan Spaghetti Bolognese', 'Tuscan White Bean and Sausage Dip #SundaySupper', 'Alkaline Recipe #32 (Fibre-ful) Tuscan Bean Soup', 'Italian Meatball Sliders', 'Italian Cheesy Pull Apart Bread', 'Simple Italian Pasta Bake', 'Quick and Easy Sundried Tomato and Sweet Basil Ravioli with Italian Sausage', 'Easy Skillet Lasagna', 'Italian Polenta Stuffing with Salami and Mozzarella', 'Simple Crockpot Italian Chicken', 'Veal or Chicken Ragu with Mushrooms and Marsala', 'Italian Mac and Cheese', 'Healthy Stuffed Shells Recipe #PastaFits #MC #Sponsored', 'Italian Sausage and Basil Pizza!', 'Chicken Carbonara', 'Gorgonzola Garlic Bread', 'Lemon Risotto with Asparagus', 'Chicken Piccata', 'Angel Hair Frittata', 'Italian Braised Chicken Thighs', 'Easy Beef Lasagna', 'Spaghetti Sauce', 'Crock Pot Lasagna', 'Gnocchi Bolognese', 'Manicotti', 'Parmesan Roasted Italian Potatoes', 'Italian Bread With Tomato Appetizers', 'Rosemary and Black Pepper Focaccia', 'Creamy Italian Sausage and Potato Soup', 'Italian Style Garlic Bread With Cheese', 'Italian Skillet Pull Apart Bread', 'Italian Parmesan Roasted Potatoes', 'Lasagna Soup', 'Italian Bread', 'Vegetarian Baked Ziti', 'Shrimp Fettuccine Alfredo', 'Spinach Lasagna Soup', 'Stuffed Zucchini', 'Italian Macaroni and Cheese', 'Baked Caprese Ravioli', 'Savory Baked Italian Meatballs', 'Creamy Artichoke Bruschetta', 'Fresh Tomato Bruschetta with Basil', 'a Classic Italian Pasta', 'Italian Roasted Peppers', 'Italian Chicken Pasta Salad', \"Daphne Oz's Light Sausage Lasagna\", 'Linguine and Mussels alla Diavola', 'Pesto di Noce (Walnut Pesto)', 'Meatballs Al Forno', 'Creamy Tomato Parmesan Linguine with Peas and Prosciutto', 'Cheesy Skillet Rigatoni', '5-Ingredient Italian Sausage and Kale Baked Ziti', 'Sicilian Sun Dried Tomato Pesto Penne', 'Classic Italian Spaghetti Carbonara In A Crockpot', 'Pesto', 'Panzanella Recipe (Tuscan Bread Salad)', 'Arancini (Italian Rice Balls)', 'Sausage Gnocchi with Tomato Alfredo Sauce', 'Chicken Alfredo Italian Totchos', 'Italian Pasta Fagioli', 'Spaghetti Bolognese', 'Fettucini Bolognese', 'Spaghetti with Lemony Anchovy Sauce', 'Spaghetti alla Carbonara', 'Garlic Spaghetti', 'Ravioli with Italian Cheese & Herb Cream Sauce, Chicken and Veggies', 'Skinny Italian Turkey Meatballs', 'Fast & Easy Pizza Dough', 'Minestrone with Gluten Free Ravioli', 'Mushroom Risotto', 'Italian Style Mushroom and Spinach Frittata', 'Spinach Spaghetti with Sun-Dried Tomatoes', 'Italian Baked Pasta', 'Easy Italian Herb Infused Dipping Oil', 'Spicy Sausage Fettuccine with Basil and Parmesan', 'Ligurian Pesto with Spaghetti', 'Classic Lasagna', 'Broiled Bruschetta', 'Classic Italian Lasagna', 'Pasta Puttanesca', 'Spinach Lasagna Rolls', 'Pasta with Pesto di Trapani', 'Italian Rice Balls', 'Quick and Easy Italian Dressing', 'Italian Party Flank Steak', 'Italian Style Baked Eggs', 'Italian Garlic Mushroom & Prosciutto Cotto Pizza with Cherry Tomatoes', 'Spaghetti Aglio e Olio', 'Spaghetti Aglio e Olio', 'Ribollita - Tuscan White Bean Soup', 'Fettuccine With Chicken Italian Sausage', 'Italian Sausage and Tortellini Soup', 'Chicken Vodka Cacciatore', 'Classic Bruschetta', 'Italian Meatballs in Creamy Mushroom Sauce', 'Weeknight Bolognese', 'Italian Parmesan Pretzels', 'Creamy Italian Pasta Skillet', 'Parmesan Risotto', 'Spinach Gnocchi', 'Fresh Egg Pasta', 'Herbed Soft Italian Bread', 'Cheesy Bruschetta Bites', 'Chicken Panini with Pesto and Mozzarella', 'Italian Rice Balls', 'Italian Alfredo Broccoli Strata', 'Hestonâ\\x80\\x99s Carbonara', 'Grilled Fresh Mozzarella, Tomato & Pesto Panini', 'Sicilian Panini', 'Healthy Stuffed Shells Recipe #PastaFits #MC #Sponsored', 'Italian Bread Machine Bread', 'Chicken Parmesan Alfredo', 'Pasta Carbonara', 'Broken Spaghetti Meatballs', 'Homemade Cheese Ravioli', 'Ricotta Gnocchi', 'Chicken Tuscan Sandwich', 'Spaghetti with Cheese and Pepper [Spaghetti Cacio e Pepe]', 'Homemade Spinach Basil Pesto', 'Goat Cheese & Roasted Red Pepper Panini', 'Slow-Cooker Lasagna', 'Italian Spaghetti and Meatballs', 'Chunky Pasta Sauce With Italian Sausage, Roasted Tomatoes, Garlic, and Basil', 'Italian Baked Chicken', 'Italian Chicken Soup', 'Pesto Gnocchi With Olives and Sun-Dried Tomatoes [Vegan]', 'Chicago-Style Deep Dish Pizza', 'Fresh Homemade Egg Pasta Dough', 'Italian Meatball Sliders', 'Italian-Style Eggplant Casserole', 'Family-Favorite Spaghetti Sauce', 'Italian Stuffed Mushrooms', 'Olive Gardenâ\\x80\\x99s Lasagna Classico', 'Weeknight Ravioli Lasagna', 'Garlic Bruschetta', 'Basic Pizza Dough', 'Italian Meatloaf', 'GARLIC PARMESAN RISOTTO', 'Italian Bean and Pasta Soup', 'One-Pot Italian Goulash', 'Sicilian-Style Pizza Dough', 'SuperFrico Grilled Cheese Sandwich', 'Mozzarella Puffs', 'Italian Chicken Cutlets', 'HOMEMADE SPAGHETTI SAUCE (Italian Sausage Marinara)', 'Caprese Pasta Skillet', 'Spaghetti With Lemon And Olive Oil', 'Weeknight Skillet Lasagna', 'Italian Meatball Hoagie Braids', 'Bolognese Sauce', 'Miracle Lasagna', 'Roasted Peppers & Eggplant Crostini', 'Baked Ziti with Italian Sausage', 'Italian Halibut', 'Italian Bolognese Sauce', 'Ricotta Gnocchi', 'Caprese Panini', 'Italian Zucchini Boats', 'Pasta Aglio e Olio from the movie Chef', 'Marcella Hazanâ\\x80\\x99s Spaghetti Carbonara', 'Caprese Bruschetta', 'Silviaâ\\x80\\x99s Italian Focaccia', 'Frittata di Spaghetti', 'Challah Bruschetta with Lemon Ricotta and Honey', 'Baked Spaghetti Frittata With Broccoli Rabe And Smoked Mozzarella', 'Minestrone Soup with Meatballs', 'Easy Cheesy Baked Tortellini', 'Homemade Italian Bread', 'Big Italian Salad', 'Caramelized Onion & Mushroom Frittata', 'Chicken Piccata', 'Lasagna', 'Pasta Frittata', 'Risotto with Spinach', 'Skillet Tortellini with Sausage and Pesto', 'Slow Cooker Italian Pulled Pork', 'Creamy Butternut Sage Risotto', 'Italian Beef and Noodle Casserole', 'Marinara Sauce', 'Fettuccine with Olive Oil, Garlic, and Red Pepper', 'Baked Chicken Parmesan', 'Bolognese Sauce', 'Italian Flank Steak Pinwheels', 'Spaghetti Italian', 'Salami & Provolone Panini', 'Bolognese Sauce', 'Recipe for Farinata with Rosemary and Pepper (Italian Chickpea Flatbread)', 'Pesto', 'Sausage RaguÌ\\x80', 'Classic Italian Burgers', 'Chicken Saltimbocca', 'Chicken Carbonara Rosa', 'Tuscan White Bean Soup with Kale', 'Slow Cooker Gluten Free Italian Meatballs', 'Pasta e Fagioli', 'Turkey and Arugula Panini with GruyÃ¨re', 'Bruschetta Margherita', 'Alfredo Primavera', 'Penne Primavera', 'Simple Crockpot Italian Chicken', 'Grilled Cheesy Garlic Bread', 'Orecchiette with Spinach and Gorgonzola Sauce', 'Farfalle Carbonara', 'Italian Sausage, Tomato, and Macaroni Soup with Basil', 'Slow Cooker Lasagna', 'The Ultimate Italian Panini', 'Spicy Italian Stuffed Zucchini Boats', 'Low Fat Baked Ziti with Spinach', 'Spicy Sausage Panini', 'One Pot Spicy Gnocchi Marinara', 'Light Italian Meatballs', 'Zoodles Marinara (Zucchini Noodles with Chunky Tomato Sauce)', 'Peach and Prosciutto Bruschetta', 'Potato Gnocchi', 'French Onion Pork Chops', 'French Onion Soup', 'French Onion Soup', 'French Brioche', 'Classic Coq Au Vin', 'French Onion Soup #SundaySupper', 'French Onion Chicken', \"The Canyon Bistro's French Onion Soup\", 'French Baguette', 'Three Onion French Onion Soup', 'Light French Onion Soup', 'French Brioche â\\x80\\x93 September SRC', 'Croissants', 'Best Ever Potatoes au Gratin', 'PAIN AU CHOCOLAT', 'Daube ProvencÌ§ale (French Beef Stew with Red Wine)', 'Best Ever Potatoes au Gratin', 'Best Ever Potatoes au Gratin', 'Crockpot French Onion Soup with Cheesy French Toast.', 'Coq Au Vin PaleOMG Style + All-Clad 12â\\x80³ Chef Pan Giveaway', 'The Ultimate French Onion Soup Grilled Cheese', 'Creme Brulee French Toast Casserole', 'Chicken Cordon Bleu', 'French Onion Soup', 'BÅ\\x93uf Bourguignon VeÌ\\x81geÌ\\x81talien [Vegan, Gluten-Free]', 'Onion Soup [Soupe aÌ\\x80 lâ\\x80\\x99Oignon]', 'Basic Crepes', 'Croque-Madame', 'French Onion Soup Grilled Cheese', 'Healthy & Easy French Chicken Cassoulet', 'French Onion Mushroom Casserole', 'French Onion Soup', 'Creme Brulee French Toast with Strawberries (Dairy Free, Refined Sugar Free)', 'French Potage', 'Classic French madeleines', 'French Crepes', 'French Omelets', 'Quiche Lorraine', 'Easy Vegan French Onion Soup', 'French Onion Soup', 'French Onion Soup au Gratin Stuffed Meatloaf', 'Crockpot French Onion Soup', 'French Onion and Bean Soup', 'French Onion Soup', 'Quiche Lorraine Recipe easy - How to make Quiche Lorraine', 'French Onion Soup', 'French Onion Soup', 'Light & Easy French Onion Soup', 'Croque Monsieur & Croque Madame', 'CreÌ\\x82pes au sucre (Sugar pancakes)', 'Scallops in Buttery Wine Sauce', 'Mussels MariniÃ¨re', 'Coq au Vin', 'Royal French Appetizer â\\x80\\x93 Homemade Foie Gras', 'Garlic Confit', 'Eggs In Pots (oeufs En Cocotte)', 'Chicken Cordon Bleu Pasta', 'French Dip Au Jus', 'French Crepes', \"The French Laundry's Gougeres\", 'French Onion Grilled Cheese', 'Buttery Croissants', 'Fast French Onion Soup', 'Slow Cooker Coq au Vin', 'Classic French Onion Soup', 'Mushroom RagoÃ»t', 'Steak au Poivre', 'Profiteroles', 'French Onion Soup', 'French Onion Soup', 'French Onion Soup', 'Creme Anglaise', 'PaÌ\\x82te aÌ\\x80 Choux', 'Traditional French Onion Soup', 'Cheese Souffle', 'Coq au Vin', 'Betsyâ\\x80\\x99s No Garlic French Onion Soup (Ooo La La!)', 'French Petits Choux â\\x80\\x9cChouquettesâ\\x80\\x9d', 'French Onion Soup', 'Classic French Onion Soup', 'Vegetable Soup au Pistou', 'PaveÌ\\x81 de boeuf with Roquefort sauce and gratin dauphinoise', 'Croissants', 'Croissants', 'Fish ProvencÌ§al', 'How To Make Au Jus for French Dip Sandwiches', 'French Onion Soup', 'Beef Bourguignon', 'Mushrooms in Cream Sauce (Champignons aÌ\\x80 la CreÌ\\x80me)', 'FRENCH ONION TARTE', 'Beef Burgundy III', 'Ratatouilleâ\\x80\\x99s Ratatouille', 'Sweet Potato Gratin with GruyÃ¨re', 'Vichyssoise', 'Croissant Dough', 'French 75 Jello Shots', 'French Onion Soup Sandwiches', 'Coq Au Vin Blanc', 'baked French fruit crepe', 'French Onion Soup au Gratin Stuffed Meatloaf', 'Classic Pommes Anna', 'French Onion Soup', 'Bistro-Style French Onion Soup', 'Spring Vegetable Quiche', 'TGI Fridayâ\\x80\\x99s-Inspired French Onion Soup', 'Vegetarian French Onion Soup', 'French Dip Sandwiches with Au Jus', 'Classic GougÃ¨res', 'Herbed-Baked Eggs', 'The Ultimate French Onion Soup Grilled Cheese', 'French deviled eggs | Oeufs mimosa', 'Pan-Seared Steak Au Poivre', 'Cherry Tomato Clafoutis', 'Pain au Chocolat', 'Beef Cheeks Braised in Red Wine with Orange Zest (Joues de Boeuf aux Agrumes)', 'Perfect French Onion Soup', 'Roasted Asparagus With Hollandaise Sauce', 'Coq au Vin', 'GougeÌ\\x80res â\\x80\\x93 Cheese Puffs', 'French Onion Soup', 'Cheddar GougeÌ\\x80res (Savory Cheese Cream Puffs)', 'Shallot-Brandy Sauce', 'Quiche Lorraine', 'Pommes Dauphinoise (Potatoes au Gratin)', 'French Onion Soup', 'Seared Scallops with Tarragon-Butter Sauce', 'Warm Crockpot French Onion Soup', 'Carbonnade de Boeuf', 'Vichyssoise!', 'Easy French Onion Soup', 'Ratatouille with Eggs', 'French Chocolate Chip Viennoises', 'Ready! The Absolute BEST French Onion Soup Youâ\\x80\\x99ll Ever Have!', 'The Best French Onion Soup â\\x80\\x93 A love story', 'Beignets', 'Quiche Lorraine', 'Croissants', 'Pate Brisee', 'French Onion Soup', 'French Canadian Breakfast Crepes', 'Baked PaÌ\\x82te aÌ\\x80 Choux', 'Duck Liver PaÌ\\x82teÌ\\x81', 'Moules Mariniere', 'Dulce De Leche Crepes', 'Steak Diane', 'Lightened Up CrÃ¨me BrÃ»lÃ©e French Toast', 'Easy French Ratatouille', 'What Is Duck Confit?', 'Potato Gratin', 'French Bread', 'Petit Pain Au Chocolat', 'Apple French Onion Soup', 'French Onion Soup', 'French Onion Soup Grilled Cheese', 'CrÃ¨me BrÃ»lÃ©e French Toasts', 'Boeuf en Daube ProvencÌ§ale', 'Pain Au Chocolat (chocolate Croissants) Made From Scratch Recipe With A Step By Step Video', 'Shrimp Francese', 'Real French Crepes', 'Tomato Bruschetta with Herbes de Provence', 'Croque-Monsieur', 'Pommes Aligot', 'Pain au Chocolat', 'Onion Thyme Tart', 'French Onion Soup', 'Boeuf Bourguignon', 'Brioche Bread', 'French Macarons', 'Pain Perdu - Cajun Style French Toast', 'COQ AU VIN WITH QUINCE', 'Authentic Buttery French Brioche Loaf', 'Coq au Vin', 'How To Make a Cheese SouffleÌ\\x81', '{Crock Pot} French Onion Soup', 'French Onion Soup II', 'Basic Crepes', 'Boeuf Bourguignon (French Beef Stew)', 'Croque Monsieur', 'French Omelet with Fresh Herbs', 'French Onion Soup With Browned Garlic', 'Vichyssoise', 'French Onion Soup', 'Bacon and Leek Quiche', 'Shirred Eggs', 'Raspberry Macarons', 'Lemon Crepes', 'Ratatouille', 'French Onion Soup', 'Potato and Tomato Galettes', 'French Baguettes', 'French Bread Dough', 'Pommes Anna (Potatoes Anna)', 'My Favorite Simple Roast Chicken', 'Boeuf Bourguignon', 'Potato, Zucchini, and Tomato Gratin', 'Sauteed Duck Foie Gras', 'French Onion Soup', 'Chicken Cordon Bleu II', 'Sauteed Chicken in Mustard-Cream Sauce', 'Ratatouille', 'French Onion Grilled Cheese Sandwich', 'Herbed Chicken Paillard', 'Japanese Fried Chicken', 'Yakitori Chicken With Ginger, Garlic and Soy Sauce', 'Yakionigiri Miso Butter Flavour', 'Salmon Teriyaki Noodles', 'Honey-Teriyaki Salmon', 'Japanese Pork Gyoza', 'Japanese-style Glazed Pan Seared Salmon', 'Salmon Teriyaki', 'Yakitori (ç\\x84¼ã\\x81\\x8dé³¥) - Japanese Grilled Chicken', 'Japanese Spinach with Sesame and Soy', 'Udon Miso Noodle Soup', 'Onigiri - Japanese Rice Balls', 'Tonkatsu recipe (Japanese pork cutlet)', 'Japanese Fried Chicken', 'Japanese Street Food Recipe - Chicken Karaage', 'Sushi Lovers Seaweed Salad', 'Chilled Soba in Cucumber Cups', 'Salmon Teriyaki', 'Sunomono Salad Recipe (Japanese Cucumber Salad)', 'Japanese Beef and Rice Bowl', 'Yakitori', 'Easy Chicken and Scallion (Negima) Yakitori', 'Gyoza', 'Japanese Style Egg Drop Soup (ã\\x81\\x9fã\\x81¾ã\\x81\\x93ã\\x82\\x99 ã\\x82¹ã\\x83¼ã\\x83\\x95ã\\x82\\x9a)', 'Japanese Braised Pork Belly (Buta no kakuni)', 'Cucumber Salad made Japanese Style', 'Salmon Teriyaki', 'Japanese Fried Chicken', 'Teriyaki Chicken Breasts', 'Tonkatsu (Japanese Pork Cutlet)', 'Beef Negimaki', 'Chicken Teriyaki', 'Onigiri recipe (How to make Japanese rice ball) â\\x80\\x93 Recipe and my childhood', 'Chicken Teriyaki', 'Teriyaki Chicken', 'Japanese Sesame Miso Grilled Salmon', 'Japanese Fried Chicken â\\x80\\x93 Chicken Karaage ( ã\\x81¨ã\\x82\\x8a ã\\x81\\x8bã\\x82\\x89ã\\x81\\x82ã\\x81\\x91ã\\x82\\x99)', 'Japanese Marinated Soft Boiled Egg for Ramen (Ajitsuke Tamago)', 'Perfect Sushi Rice', 'Chicken Teriyaki', 'Miso Marinated Pork (butaniku no misozuke)', 'Japanese Potato Salad', 'Chicken Karaage', 'Wafu Dressing (Japanese Salad Dressing)', 'Teriyaki Beef', 'Chicken Teriyaki', 'Japanese-style Ceviche', 'Miso Dressing', 'Wafu Dressing (Japanese Salad Dressing)', 'Chicken Teriyaki', 'Cucumber and Avocado Sushi', 'Teriyaki Salmon', 'Japanese Sesame Beef and Broccoli', 'Ebi Sunomono (Japanese Shrimp Salad)', 'Chicken Teriyaki', 'Japanese Crispy Fried Shrimp', 'Stir Fried Japanese Eggplant with Ginger and Miso', 'Katsu Sando (Japanese Pork Cutlet Sandwich)', 'Sekihan (Japanese Azuki Beans & Rice)', 'Oyakodon', 'Tonkatsu (Japanese Pork Cutlet)', 'Gyudon â\\x80\\x93 Japanese Beef Bowl', 'Japanese Shrimp Sauce I', 'Japanese Gyoza (Meat & Cabbage Dumplings)', '1 egg tamagoyaki (Japanese omelette)', 'Miso-Glazed Sea Bass', 'Miso Glazed Salmon', \"My Mom's Simple Japanese Okra\", 'Yakitori', 'Nasu Dengaku', 'Beef Teriyaki', 'Cucumber Sunomono', 'Nourishing Japanese Vegetable Soup', 'Chicken Katsu', 'Pan-fried Gyoza with Crispy Lattice Coating', \"Mom's Sushi Rice\", 'Roasted Miso-Glazed Salmon', 'Miso-Glazed Grilled Scallops', 'Teriyaki Salmon', 'Japanese Quick Pickled Cucumbers', 'Salmon Teriyaki', 'Japanese Okonomiyaki', 'Japanese Pickled Cucumbers (Kyuri Zuke)', 'Miso Cod', 'Japanese Salted Salmon (Shiojake/Shiozake)', 'Steamed Egg (Chawan Mushi)', 'Sliced Beef with Enoki Mushrooms - Japanese Style', 'Japanese Fried Chicken', 'Crock Pot Honey Teriyaki Chicken', 'Salmon Teriyaki (ã\\x81\\x95ã\\x81\\x91 ã\\x81¦ã\\x82\\x8aã\\x82\\x84ã\\x81\\x8d)', 'Steak Teriyaki', 'Nobuâ\\x80\\x99s Chicken Teriyaki Two Ways', 'Salmon and Avocado Sushi Roll', 'Steamed Broccoli with Miso Peanut Butter Sauce (Power Foods)', 'Japanese Clams (Sake Steamed Clams)', 'Sous Vide Chicken Teriyaki', 'Japanese Cucumber Salad.', 'Japanese Potsticker Dip', 'Sous Vide Miso Sea Bass With Anovaâ\\x80\\x99s Precision Cooker', 'Japanese Beef Rice Bowl (ç\\x89\\x9bä¸¼ - Gyudon)', 'Japanese Ginger Pork', 'Kyuri Asa-zuke (Japanese Lightly Pickled Cucumbers)', 'Vinegared Sushi Rice', 'Beef Teriyaki', 'Crispy Shrimp Tempura', 'Yakitori ç\\x84¼ã\\x81\\x8dé³¥', 'Japanese Braised Pork Belly', 'Salmon Honey Teriyaki', 'Japanese Braised Pork Belly', 'Gyudon (Beef Bowl)', 'Green Beans with Miso Butter', 'Yakitori Don', 'Okinawa Shoyu Pork', 'Miso Sea Bass', 'True Chicken Teriyaki', 'Yakiniku (Japanese Grilled Meat or BBQ)', 'Karaage (Japanese Fried Chicken)', 'Chicken and Soba Noodle Soup', 'Japanese Onion Soup', 'Miso Soup', 'Salmon Yakitori', 'Teriyaki Salmon with Zucchini', 'Japanese Miso Eggplant', 'Chicken Teriyaki', 'Ikura (Salmon Caviar)', 'Japanese-Style Grilled Mushrooms', 'Tonjiru ~ Japanese Pork and Vegetable Miso Soup', 'Dashi Maki Tamago', 'Salmon Teriyaki Kebabs', 'Benihana Onion Soup', 'Teriyaki Marinade', 'Teriyaki Chicken', 'Beef Tenderloin Yakitori', 'Omuraisu (Japanese Rice Omelet)', 'Wasabi Edamame Schmear', 'Yakitori Chicken With Ginger, Garlic and Soy Sauce', 'Teriyaki Lettuce Wraps', 'Miso-Glazed Cod', 'Yakitori Chicken', 'Darjeeling Dashi', 'Karaage (Japanese Fried Chicken Recipe)', 'Miso Soup', 'Cucumber Salad made Japanese Style', 'Avocado Onigiri with Ginger Kewpie Mayo', 'Japanese Salmon & Shiitake Hot Pot', 'Smoked Salmon Sushi Roll', 'Classic Chicken Teriyaki', 'Yakitori Marinade', 'Shrimp Sushi', 'Squid kara-age with Japanese mayonnaise', 'Matcha Green Tea Ice Latte', 'Yakitori', 'Japanese-Style Pickled Cucumbers with Seaweed and Sesame', 'Japanese Beef Rice Bowl (Gyudon)', 'Glazed Japanese Chicken Meatballs on Skewers', 'Japanese Beef Rice Bowl (Gyudon)', 'Miso Salmon with Cucumber Salad', 'Nibuta (Japanese Simmered Pork Shoulder)', 'Japanese Broiled Mackerel', 'Onigiri', 'Sushi Deviled Eggs | Elegant Appetizers', 'Negima Yakitori (Chicken and Scallion Skewers with Yakitori Sauce)', 'Chicken Teriyaki', 'Japanese Country Style Stewed Eggplant Or Aubergine (nasu No Inakani)', 'Ginger Saketini', 'Grilled Chicken and Zucchini Yakitori', 'Sushi Rice', 'Japanese Turnips with Miso', 'Roasted Japanese Sweet Potatoes with Scallion Butter', 'Japanese Chicken-Scallion Rice Bowl', 'Cream Cheese and Crab Sushi Rolls', 'Teriyaki Pork Tenderloin', 'Ebi Sunomono', 'Tilapia with Miso and Scallions', 'Miso-Ginger ConsommÃ©', 'How To Prepare Salmon | Japanese Salted Salmon (Shiojake/Shiozake)', 'Corn Kakiage Fritters (Japanese Fresh Corn Tempura)', 'Japanese Beef and Scallion Rolls', 'Tinned Tuna Sushi', 'Gyudon (Japanese Beef Bowl)', 'Teriyaki King Oyster Mushroom', 'Miso Pickled Garlic (Ninniku Miso-zuke)', 'Black Cod with Miso', 'Yummylicious Japanese Beef Croquettes', 'Wasabi Onigiri', 'Edamame With Ginger-Chile Dipping Sauce', 'Tonkatsu - Asian-style Pork Chop', 'Broiled Salmon with Corn, Shitake Mushrooms, and Miso dressing', 'Salmon Shioyaki', 'Chicken Teriyaki', 'Japanese Beef Rolls', 'Teriyaki Tuna with Ginger Vegetables', 'Momotaro (Japanese Tomato Salad)', 'Chicken Yakitori', 'Teriyaki Chicken Noodle', 'Japanese Soba with Mushroom Broth', 'Seared Tuna Sushi Bowl', 'Sous Vide Salmon Teriyaki', 'Keema Paratha Recipe-Stuffed keema paratha', 'Kerala Style Chicken Curry Recipe-Kerala chicken curry with coconut', 'Bangladeshi Beef Samosas', 'Aloo Palak (Indian Potatoes & Spinach)', 'Aloo Bonda Recipe South Indian Style', 'Kadai Chicken', 'Indian Kadai Chicken', 'Punjabi Kardhi Pakora', 'Lemon Rice', 'Green Coconut Fish Curry', 'Grilled Tandoori Chicken', 'INDIAN BUTTER CHICKEN', 'Mutton Chops Curry Recipe-How to make mutton chops curry', 'Creamy Chicken Tikka Masala', 'Tandoori Turkey Breast', 'Homemade Tikka Masala', 'Butter Chicken', 'Boneless Tandoori Chicken recipe in oven-how to make tandoori chicken', 'Malpua -Sweet Indian Pancakes', 'Butter Chicken for the Slow Cooker', 'Easy Indian Curry', 'Indian Style Baked Tofu', 'Indian Naan', 'Hyderabadi Chicken Biryani', 'Indian Appetizer Cabbage Pakora', 'Aromatic Blackeye Bean Curry', 'Biryani-Inspired Autumn Vegetable Rice', 'Indian Spiced Cauliflower & Potatoes', 'Butter Chicken/ Murgh Makhani', 'Murgh Makhani Indian Butter Chicken', 'Easy Baked Indian Samosas', 'Masala Chai (Indian Spiced Tea)', 'Pakistani Chicken Biryani', 'Erissery', 'Indian Cumin Potatoes', 'Skinny Chicken Tikka Masala', 'Spiced Beef Flatbread (Khima Chapati)', 'Clean Eating Indian Fried Rice', 'Naan (Indian Leavened Flatbread)', 'Easy Mango Lassi', 'Red Lentils / Masoor Dal', 'Dal Baingan Bharta (Indian Eggplant and Lentil Curry)', 'Cucumber & Mint Raita', 'Goan Meatball Curry Recipe - Indian Beef Kofta {Easy and Quick}', 'Indian Butter Chicken', 'Indian Chai Oatmeal', 'Mango Lassi', 'Tomato and Cauliflower Curry', 'Lamb Curry - Meat Curry', 'Masala Gosht - Indian Meat Curry', 'Indian Potato and Chickpea Soup', 'Garam Masala Eggplant Chips with Cilantro Mint Raita', 'Paneer Korma Recipe - Indian Cottage Cheese Curry - mughlai shahi paneer', 'Adraki Murg', 'Aloo Keema (Potato and Mince Curry)', 'Indian Raita', 'Tarka Dal', 'Indian Naan Bread', 'Slow Cooker Beef Curry', 'Indian Butter Chicken', 'Indian Cucumber Raita', 'Roomali Roti', 'Cilantro Chicken | Easy Chicken Curry', 'Mango Curry Tofu', 'Tandoori Chicken', 'Tandoori Rack of Lamb', 'Indian-Spiced Mushrooms and Lentils', 'Sabut Masoor Ki Daal - Lentil Soup', 'Tarka Dall', 'Indian Golden Basmati Rice', 'Lamb Rogan Josh', 'MUSHROOM BUTTER MASALA', 'Indian Cauliflower and Potato Soup (Aloo Gobi)', 'Mint and Pomegranate Raita', 'Mint Chutney Recipe | Pudina Pachadi', 'Kerala Mutton/Lamb Roast', 'Channa Pulao-Chana Rice', 'Mutton Do Pyaza', 'Indian Mini Garlic Naan', 'Tandoori Chicken', 'Indian Lentil Soup', 'Plain Indian Raita', 'Pastor Ryanâ\\x80\\x99s Chicken Tikka Masala', 'Hyderabadi Dum ka Murgh', 'Indian Kheer', 'Tawa Pulao', 'Chicken Tikka Masala', 'Indian-Style Lamb Shanks', 'Roti Bread from India', 'Indian Yellow Split Pea Dal', 'Easy & Amazing Vegan Indian Samosas', 'Goan Curried Braised Beef With Coconut Milk, Vinegar and Potatoes', 'Chickpea Curry with Quinoa', 'Indian Mango Mania Lassi', 'Red Lentils and Spinach in Masala Sauce', 'Kichadi', 'Curried Red Lentil Sweet Potato Stew', 'Warm Spiced Beef Curry with Rice', 'Indian Masala Chai', 'Weeknight Tikka Masala', 'Achari Gobhi', 'Indian Cauliflower Curry', 'Beef Masala Curry', 'Crispy Indian Okra', 'Best Ever Bombay Potatoes', 'Indian Lamb Curry', 'Palak Chole (Indian Spinach and Chickpea Curry) [Vegan, Gluten-Free]', 'Spicy Tandoori Chicken, Indian Mexican Fusion', 'Tandoori Fish', 'Indian Dhal (Lentil Puree)', 'Curried Rice with Shrimp', 'Curried Sauteed Cauliflower', 'Indian Fruit Lassi', 'Indian Butter Chicken', 'Indian Shrimp Vindaloo', 'Indian Spiced Potato Wedges With Coriander Lime Yogurt', 'Pumpkin Masala', 'Eggplant Curry', 'Basmati Rice', 'Kerala style Fish Molee/Moly', 'Felicity Cloakeâ\\x80\\x99s perfect chana masala', 'Indian Shrimps with Okra', 'Chicken Tikka Masala', 'Pakistani Style Chanay Ka Pulao (Chickpeas / Garbanzo Beans Pilaf)', '30-Minute Vegan Chana Masala', 'Chicken Chettinad â\\x80\\x93 a chicken dish from Tamil Nadu', 'Spicy Indian Grilled Chicken', 'Indian Basmati Rice Seasoned with Garam Masala', 'Indian Spiced Cauliflower and Potato', 'Tandoori Chicken Kebabs', 'High Chai', 'Crock Pot Butter Chicken', 'Lentil and Chick Pea Curry with Coconut Milk', 'Samosa Mashed Potatoes', 'Indian Style Rice', 'Easy Mixed Vegetable Curry', 'Mango Lassi', 'Rasgulla -Famous Bengali Sweet | Indian Sweet', 'Indian Spiced Beef Kabobs', 'Plain Aloo Tikki', 'Indian Garbanzo Beans (Chole)', 'Indian Cardamom Lassi', 'Bhindi Masala (North Indian Okra Stir-Fry)', 'Fresh Mango Lassi', 'Naan (Indian Flat Bread)', 'Easy Chicken Tikka Masala', 'Chicken Korma', 'Chettinad Chicken curry recipe-how to make chettinad chicken curry', 'Chicken Jalfrezi', 'ALOO JEERA', 'Dal Palak (Spinach Dal)', 'Warm Indian Potato Salad', 'Carrot Banana Curry', 'Perfect Dal', 'Indian Sweet Bread', 'Frizzled Onions', 'Chicken Makhani (Indian Butter Chicken)', 'Indian-Seasoned Vegetable Patties', \"Perur Athama's Mutton Kuzhambu (Curry)\", 'West Indian Lamb Curry', 'Vegetable Pakora', 'Peanut Chicken Curry', 'Butter Paneer (Paneer Makhani)', 'Grilled Tandoori Chicken', 'Strawberry Lassi', 'Cauliflower Fritters With Mint Raita', 'Coconut Chutney', 'Crockpot Curry Chicken', 'Indian Dal', 'Matar Paneer', 'Curried Split-pea Soup', 'Slow Cooker Lamb Rogan Josh', 'Keema (Indian-Style Ground Meat)', 'Mango Iced Tea', 'Indian Spicy-Sour Chickpeas With Cauliflower', 'Indian-Spiced Mixed Nuts', 'Bhuna Qeema With Khara Masala (Minced Meat With Whole Spices)', 'Indian Spiced Chickpeas', 'Curried Ground Turkey with Potatoes', 'Indian Chickpea Curry (Garbanzos)', 'INDIAN CHOLE', 'Indian Butter Chicken', 'DAL FRY', 'West Indian Lamb Curry', 'South Indian Fish Curry Recipe-Recipe for Fish Curry', 'Indian Aloo Gobi (Potato and Cauliflower Curry)', 'Thakkali Dosa - 2, Tomato Dosa - 2', 'Indian-Style Spicy Yogurt Marinade', 'Cucumber Raita', 'Crockpot Butter Chicken', 'Bread Uttapam, South Indian Snack', 'Paneer Makhani (Indian Cheese In Creamy Sauce)', 'Indian Chickpea Dip', 'Lamb Saag â\\x80\\x93 Lamb and Spinach Curry', 'Tandoori Chicken Recipe - Grilled Chicken With Spiced Yogurt Marinade', 'Zero Oil Chicken Tikka Masala', 'Indian Yellow Dal', 'Easy Indian Naan Bread', 'Saag Aloo', 'Kerala Spiced Peas', 'Indian Curried Poached Eggs', 'Punjabi Chole Recipe, Chana Masala', 'No Fry Indian Pakoras', 'Kara Kondakadalai Sundal (Chickpeas Masala Sundal)', 'Indian Chicken Tikka', 'Lentil, Chard & Sweet Potato Curry', 'Falafel', 'Aloo Palak (Indian Potatoes & Spinach)', 'Grilled Chicken Tikka', 'Pineapple Raita', 'Ragda Patties ( Potato Patties with Spicy White Peas Gravy)', 'Pomegranate Mint Raita', 'Indian-Spiced Roasted Squash Soup', 'Chai (Indian Tea)', 'Indian Saffron Rice', 'Easy Chicken Biryani', 'Indian Cabbage and Potato Fry', 'Mutton Masala Recipe Hyderabadi', 'Red Lentil and Spinach Masala', 'Indian Potatoes with Mustard Seeds (Sookhi Bhaji)', 'Zucchini and Tomato Curry', 'Raw banana fry recipe | Vazhakkai fry', 'Tandoori Chicken', 'Curried Cumin Potatoes', 'Saffron Rice', 'Indian-Style Potatoes (Khatta Aloo)', 'Quinoa Cauliflower Biryani. Vegan Glutenfree', 'Indian Fish Coconut Curry', 'Indian Saffron Chicken', 'Aromatic Beef Curry', 'Mint Raita', 'Coconut Rice', 'Shami Kabab', 'Indian Roasted Red Lentil Soup', 'Squash & Red Lentil Curry', 'Bengali Bhetki Fish Curry', 'Chicken Vindaloo', 'Pomegranate Raita', 'Puli inji / Inji Puli / Inji Curry', 'Indian Spiced Rice', 'Vegan Bombay Potatoes and Peas', 'Chickpea Tikka Masala', 'Indian Tandoori Style Chicken', 'Indian Samosas', 'Home Â» Non-Vegetarian Â» Keema Matar (Minced Lamb & Green Peas)', 'Vegan Bombay Potatoes', 'Golden Red Lentil Dal with Cilantro-Speckled Basmati', 'Thai Green Prawn Curry', 'Indian Aloo Gobi', \"Madhur's Chicken Tikka Masala\", 'Halibut with Indian spices', 'Chicken Xacuti', 'Pineapple Lassi', 'Easy Chicken Tikka Masala', 'The Best Chicken Biryani', 'Chicken Tikka Masala', 'Meera Sodhaâ\\x80\\x99s Chicken Curry', 'Healthy Tandoori Chicken Kebab', 'Aloo Matar Dry Recipe-How to make dry aloo matar', 'Indian Quick Chicken Curry', 'Masala Chai (Hot Indian Tea spiced with Cardamom and Ginger)', 'Indian Spicy Chai Tea', 'HYDERABADI CHICKEN BIRYANI - A CLASSIC INDIAN', 'Indian Crock Pot Chicken Vindaloo', 'Indian Mini Garlic Naan', 'Healthy Slow Cooked Tikka Masala', 'Indian Egg Curry', 'Zucchini and Onion Bhajis (Indian Spiced Zucchini and Onion Fritters or Pakoras)', 'Healthy Slow Cooker Indian Butter Chicken', 'Indian Mutton Biryani Recipe-Recipe for mutton biryani', 'BOMBAY ALOO', 'Chicken Dhansak', 'Quick and Easy Chicken Biryani', 'Gordon Ramsayâ\\x80\\x99s Tikka Masala', 'Indian Peas with Paneer Cheese (Mattar Paneer)', \"Spicy Red Lentil and Chickpea Stew (Paula's Moroccan Lentil Stew)\", 'Lamb and Fresh Plum Tagine'], 'y': {'__ndarray__': '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', 'shape': (1015,), 'dtype': 'float32', 'order': 'little'}, 'x': {'__ndarray__': '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', 'shape': (1015,), 'dtype': 'float32', 'order': 'little'}},</div></div><div class=\"1036\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">js_event_callbacks&nbsp;=&nbsp;{},</div></div><div class=\"1036\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">js_property_callbacks&nbsp;=&nbsp;{},</div></div><div class=\"1036\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">name&nbsp;=&nbsp;None,</div></div><div class=\"1036\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">selected&nbsp;=&nbsp;Selection(id='1039', ...),</div></div><div class=\"1036\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">selection_policy&nbsp;=&nbsp;UnionRenderers(id='1038', ...),</div></div><div class=\"1036\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">subscribed_events&nbsp;=&nbsp;[],</div></div><div class=\"1036\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">syncable&nbsp;=&nbsp;True,</div></div><div class=\"1036\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">tags&nbsp;=&nbsp;[])</div></div></div>\n","<script>\n","(function() {\n","  let expanded = false;\n","  const ellipsis = document.getElementById(\"1037\");\n","  ellipsis.addEventListener(\"click\", function() {\n","    const rows = document.getElementsByClassName(\"1036\");\n","    for (let i = 0; i < rows.length; i++) {\n","      const el = rows[i];\n","      el.style.display = expanded ? \"none\" : \"table-row\";\n","    }\n","    ellipsis.innerHTML = expanded ? \"&hellip;)\" : \"&lsaquo;&lsaquo;&lsaquo;\";\n","    expanded = !expanded;\n","  });\n","})();\n","</script>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["p.circle('x', 'y', size=10, source=source,fill_color=colors)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"lhaceZTiHTaJ","executionInfo":{"status":"ok","timestamp":1679855015909,"user_tz":-120,"elapsed":4,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"e82fb1f1-3c64-4f28-cba2-38ffa389284c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GlyphRenderer(id='1044', ...)"],"text/html":["<div style=\"display: table;\"><div style=\"display: table-row;\"><div style=\"display: table-cell;\"><b title=\"bokeh.models.renderers.GlyphRenderer\">GlyphRenderer</b>(</div><div style=\"display: table-cell;\">id&nbsp;=&nbsp;'1044', <span id=\"1047\" style=\"cursor: pointer;\">&hellip;)</span></div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">coordinates&nbsp;=&nbsp;None,</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">data_source&nbsp;=&nbsp;ColumnDataSource(id='1040', ...),</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">glyph&nbsp;=&nbsp;Circle(id='1041', ...),</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">group&nbsp;=&nbsp;None,</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">hover_glyph&nbsp;=&nbsp;None,</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">js_event_callbacks&nbsp;=&nbsp;{},</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">js_property_callbacks&nbsp;=&nbsp;{},</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">level&nbsp;=&nbsp;'glyph',</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">muted&nbsp;=&nbsp;False,</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">muted_glyph&nbsp;=&nbsp;Circle(id='1043', ...),</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">name&nbsp;=&nbsp;None,</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">nonselection_glyph&nbsp;=&nbsp;Circle(id='1042', ...),</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">selection_glyph&nbsp;=&nbsp;'auto',</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">subscribed_events&nbsp;=&nbsp;[],</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">syncable&nbsp;=&nbsp;True,</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">tags&nbsp;=&nbsp;[],</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">view&nbsp;=&nbsp;CDSView(id='1045', ...),</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">visible&nbsp;=&nbsp;True,</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">x_range_name&nbsp;=&nbsp;'default',</div></div><div class=\"1046\" style=\"display: none;\"><div style=\"display: table-cell;\"></div><div style=\"display: table-cell;\">y_range_name&nbsp;=&nbsp;'default')</div></div></div>\n","<script>\n","(function() {\n","  let expanded = false;\n","  const ellipsis = document.getElementById(\"1047\");\n","  ellipsis.addEventListener(\"click\", function() {\n","    const rows = document.getElementsByClassName(\"1046\");\n","    for (let i = 0; i < rows.length; i++) {\n","      const el = rows[i];\n","      el.style.display = expanded ? \"none\" : \"table-row\";\n","    }\n","    ellipsis.innerHTML = expanded ? \"&hellip;)\" : \"&lsaquo;&lsaquo;&lsaquo;\";\n","    expanded = !expanded;\n","  });\n","})();\n","</script>\n"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["\n","show(p)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B1soCGG6GiKg","executionInfo":{"status":"ok","timestamp":1679855020898,"user_tz":-120,"elapsed":230,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"bf52abbe-23f3-4ace-dcad-c911f40f3e9f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["ERROR:bokeh.core.validation.check:E-1001 (BAD_COLUMN_NAME): Glyph refers to nonexistent column name. This could either be due to a misspelling or typo, or due to an expected column being missing. : key \"x\" value \"x\", key \"y\" value \"y\" [renderer: GlyphRenderer(id='1044', ...)]\n"]}]},{"cell_type":"code","source":["#select four cuisines and do interactive plotting with bokeh\n","plot_bokeh(df_flavor,sublist, 'test1.html')\n","plot_bokeh(df_ingr,sublist, 'test2.html')"],"metadata":{"id":"1RjRCXk_RpeF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Recomendacion"],"metadata":{"id":"V05InbCse0fr"}},{"cell_type":"code","source":["# https://github.com/lingcheng99/Flavor-Network/blob/master/code/recipe_recommendation.py"],"metadata":{"id":"rkju8sj7e3BI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["'''Make recommendations based on flavor profile\n","'''\n","\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","import pickle\n","from sklearn.metrics.pairwise import cosine_similarity"],"metadata":{"id":"o0AGL6uFe3D5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#this function prints out dishes similar to the query, either includding or exclusing dishes from its own cuisine, based on 'similar_cuisine'\n","def finddishes(idx,similar_cuisine=False):\n","    cuisine = yum_ingr2.iloc[idx]['cuisine']\n","    print('Dishes similar to', yum_ingr2.loc[idx, 'recipeName'], '('+yum_ingr2.loc[idx, 'cuisine']+')')\n","    match = yum_ingr2.iloc[yum_cos[idx].argsort()[-21:-1]][::-1]\n","\n","    if not similar_cuisine:\n","        submatch = match[match['cuisine']!=cuisine]\n","    else:\n","        submatch = match\n","    # print('We have a submatch for this')\n","    for i in submatch.index:\n","        print(submatch.loc[i, 'recipeName'], '('+submatch.loc[i, 'cuisine']+')','(ID:'+str(i)+')')"],"metadata":{"id":"n_-wepkHKyJd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def plot_similardishes(idx,xlim):\n","    match = yum_ingr2.iloc[yum_cos[idx].argsort()[-21:-1]][::-1]\n","    # newidx = match.index.get_values()\n","    newidx = match.index.values\n","    match['cosine'] = yum_cos[idx][newidx]\n","    match['rank'] = range(1,1+len(newidx))\n","\n","    label1, label2 =[],[]\n","    for i in match.index:\n","        label1.append(match.loc[i,'cuisine'])\n","        label2.append(match.loc[i,'recipeName'])\n","\n","    fig = plt.figure(figsize=(10,10))\n","    ax = sns.stripplot(y='rank', x='cosine', data=match, jitter=0.05,\n","                       hue='cuisine',size=15,orient=\"h\")\n","    ax.set_title(yum_ingr2.loc[idx,'recipeName']+'('+yum_ingr2.loc[idx,'cuisine']+')',fontsize=18)\n","    ax.set_xlabel('Flavor cosine similarity',fontsize=18)\n","    ax.set_ylabel('Rank',fontsize=18)\n","    ax.yaxis.grid(color='white')\n","    ax.xaxis.grid(color='white')\n","\n","    for label, y,x, in zip(label2, match['rank'],match['cosine']):\n","         ax.text(x+0.001,y-1,label, ha = 'left')\n","    ax.legend(loc = 'lower right',prop={'size':14})\n","    ax.set_ylim([20,-1])\n","    ax.set_xlim(xlim)"],"metadata":{"id":"zEvrOtk9KyGE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["yum_ingr = pd.read_pickle('/content/drive/Shareddrives/MLNS/Project/Codes/Data/new_data/yummly_ingr.pkl')\n","yum_ingrX = pd.read_pickle('/content/drive/Shareddrives/MLNS/Project/Codes/Data/new_data/yummly_ingrX.pkl')\n","yum_tfidf = pd.read_pickle('/content/drive/Shareddrives/MLNS/Project/Codes/Data/new_data/yum_tfidf.pkl')"],"metadata":{"id":"BaCYB7YcKyDU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["yum_ingr"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"4XNIxfLVX8l-","executionInfo":{"status":"ok","timestamp":1679861241796,"user_tz":-120,"elapsed":392,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"ec3a0cd4-b938-4d76-b1d1-7246054761b8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0                                       id  \\\n","0              0      Southern-Cornbread-Dressing-1357820   \n","1              3  Disappearing-buffalo-chicken-dip-297712   \n","3              5                  Classic-coleslaw-303481   \n","5             12                   Creamed-spinach-305542   \n","6             13          Eggs-in-hash-brown-nests-352693   \n","...          ...                                      ...   \n","6782         493       Thai-Coconut-Soup-MyRecipes-246201   \n","6783         494          Thai-Coconut-Shrimp-Soup-901927   \n","6784         495         Thai-Style-Broiled-Shrimp-779084   \n","6785         496             Pad-Thai-French-Fries-984208   \n","6786         497       Spicy-Thai-Lobster-Soup-My-Recipes   \n","\n","                            recipeName  rating  totalTimeInSeconds  \\\n","0          Southern Cornbread Dressing       4              3600.0   \n","1     Disappearing Buffalo Chicken Dip       4              2100.0   \n","3                     Classic Coleslaw       4               600.0   \n","5                      Creamed Spinach       5              2700.0   \n","6             Eggs in Hash Brown Nests       5                 NaN   \n","...                                ...     ...                 ...   \n","6782                 Thai Coconut Soup       4              2400.0   \n","6783          Thai Coconut Shrimp Soup       3              1500.0   \n","6784         Thai-Style Broiled Shrimp       3               600.0   \n","6785             Pad Thai French Fries       4              1800.0   \n","6786           Spicy Thai Lobster Soup       4              3300.0   \n","\n","                      course               cuisine  \\\n","0                        NaN  Southern & Soul Food   \n","1               [Appetizers]              American   \n","3      [Salads, Side Dishes]  Southern & Soul Food   \n","5              [Side Dishes]              American   \n","6     [Breakfast and Brunch]              American   \n","...                      ...                   ...   \n","6782                 [Soups]                  Thai   \n","6783                 [Soups]                  Thai   \n","6784                     NaN                  Thai   \n","6785                     NaN                  Thai   \n","6786    [Main Dishes, Soups]                  Thai   \n","\n","                                            ingredients  \\\n","0     [buttermilk cornbread, sandwich bread, salt, b...   \n","1     [light mayonnaise, lemon juice, cayenne pepper...   \n","3     [hellmann' or best food real mayonnais, lemon ...   \n","5     [baby spinach, heavy cream, onions, garlic, un...   \n","6     [russet potatoes, salt, pepper, large eggs, co...   \n","...                                                 ...   \n","6782  [chicken broth, coconut milk, fish sauce, fres...   \n","6783  [olive oil, large shrimp, carrots, garlic, gin...   \n","6784  [garlic cloves, thai chile, salt, sugar, fish ...   \n","6785  [sauce, fish sauce, cilantro, lime, peanuts, c...   \n","6786  [lobster, vegetable oil, asian, fish, lime rin...   \n","\n","                                      clean ingredients  len_diff  ...  wheat  \\\n","0     [buttermilk cornbread, sandwich bread, salt, b...         0  ...  False   \n","1     [light mayonnaise, lemon juice, cayenne pepper...         1  ...  False   \n","3     [hellmann or best food real mayonnais, lemon j...         1  ...  False   \n","5     [baby spinach, heavy cream, onion, garlic, uns...         0  ...  False   \n","6     [russet potato, salt, pepper,  egg, cooking sp...         1  ...  False   \n","...                                                 ...       ...  ...    ...   \n","6782  [chicken broth, coconut milk, fish sauce, fres...         0  ...  False   \n","6783  [olive oil,  shrimp, carrot, garlic, ginger, r...         0  ...  False   \n","6784  [garlic clove, thai chile, salt, sugar, fish s...         0  ...  False   \n","6785  [sauce, fish sauce, cilantro, lime, peanut, cr...         1  ...  False   \n","6786  [lobster, vegetable oil, asian, fish, lime rin...         1  ...  False   \n","\n","      whiskey  whitefish  whole grain wheat flour   wine   wood    yam  yeast  \\\n","0       False      False                    False  False  False  False  False   \n","1       False      False                    False  False  False  False  False   \n","3       False      False                    False  False  False  False  False   \n","5       False      False                     True  False  False  False  False   \n","6       False      False                    False  False  False  False  False   \n","...       ...        ...                      ...    ...    ...    ...    ...   \n","6782    False      False                    False  False  False  False  False   \n","6783    False      False                    False  False  False  False  False   \n","6784    False      False                    False  False  False  False  False   \n","6785    False      False                    False  False  False  False  False   \n","6786    False      False                    False  False  False  False  False   \n","\n","      yogurt  zucchini  \n","0      False     False  \n","1      False     False  \n","3      False     False  \n","5      False     False  \n","6      False     False  \n","...      ...       ...  \n","6782   False     False  \n","6783   False     False  \n","6784   False     False  \n","6785   False     False  \n","6786   False     False  \n","\n","[5622 rows x 248 columns]"],"text/html":["\n","  <div id=\"df-873bba74-7188-4fae-bb15-d642288b485d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>id</th>\n","      <th>recipeName</th>\n","      <th>rating</th>\n","      <th>totalTimeInSeconds</th>\n","      <th>course</th>\n","      <th>cuisine</th>\n","      <th>ingredients</th>\n","      <th>clean ingredients</th>\n","      <th>len_diff</th>\n","      <th>...</th>\n","      <th>wheat</th>\n","      <th>whiskey</th>\n","      <th>whitefish</th>\n","      <th>whole grain wheat flour</th>\n","      <th>wine</th>\n","      <th>wood</th>\n","      <th>yam</th>\n","      <th>yeast</th>\n","      <th>yogurt</th>\n","      <th>zucchini</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Southern-Cornbread-Dressing-1357820</td>\n","      <td>Southern Cornbread Dressing</td>\n","      <td>4</td>\n","      <td>3600.0</td>\n","      <td>NaN</td>\n","      <td>Southern &amp; Soul Food</td>\n","      <td>[buttermilk cornbread, sandwich bread, salt, b...</td>\n","      <td>[buttermilk cornbread, sandwich bread, salt, b...</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>Disappearing-buffalo-chicken-dip-297712</td>\n","      <td>Disappearing Buffalo Chicken Dip</td>\n","      <td>4</td>\n","      <td>2100.0</td>\n","      <td>[Appetizers]</td>\n","      <td>American</td>\n","      <td>[light mayonnaise, lemon juice, cayenne pepper...</td>\n","      <td>[light mayonnaise, lemon juice, cayenne pepper...</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5</td>\n","      <td>Classic-coleslaw-303481</td>\n","      <td>Classic Coleslaw</td>\n","      <td>4</td>\n","      <td>600.0</td>\n","      <td>[Salads, Side Dishes]</td>\n","      <td>Southern &amp; Soul Food</td>\n","      <td>[hellmann' or best food real mayonnais, lemon ...</td>\n","      <td>[hellmann or best food real mayonnais, lemon j...</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>12</td>\n","      <td>Creamed-spinach-305542</td>\n","      <td>Creamed Spinach</td>\n","      <td>5</td>\n","      <td>2700.0</td>\n","      <td>[Side Dishes]</td>\n","      <td>American</td>\n","      <td>[baby spinach, heavy cream, onions, garlic, un...</td>\n","      <td>[baby spinach, heavy cream, onion, garlic, uns...</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>13</td>\n","      <td>Eggs-in-hash-brown-nests-352693</td>\n","      <td>Eggs in Hash Brown Nests</td>\n","      <td>5</td>\n","      <td>NaN</td>\n","      <td>[Breakfast and Brunch]</td>\n","      <td>American</td>\n","      <td>[russet potatoes, salt, pepper, large eggs, co...</td>\n","      <td>[russet potato, salt, pepper,  egg, cooking sp...</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6782</th>\n","      <td>493</td>\n","      <td>Thai-Coconut-Soup-MyRecipes-246201</td>\n","      <td>Thai Coconut Soup</td>\n","      <td>4</td>\n","      <td>2400.0</td>\n","      <td>[Soups]</td>\n","      <td>Thai</td>\n","      <td>[chicken broth, coconut milk, fish sauce, fres...</td>\n","      <td>[chicken broth, coconut milk, fish sauce, fres...</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6783</th>\n","      <td>494</td>\n","      <td>Thai-Coconut-Shrimp-Soup-901927</td>\n","      <td>Thai Coconut Shrimp Soup</td>\n","      <td>3</td>\n","      <td>1500.0</td>\n","      <td>[Soups]</td>\n","      <td>Thai</td>\n","      <td>[olive oil, large shrimp, carrots, garlic, gin...</td>\n","      <td>[olive oil,  shrimp, carrot, garlic, ginger, r...</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6784</th>\n","      <td>495</td>\n","      <td>Thai-Style-Broiled-Shrimp-779084</td>\n","      <td>Thai-Style Broiled Shrimp</td>\n","      <td>3</td>\n","      <td>600.0</td>\n","      <td>NaN</td>\n","      <td>Thai</td>\n","      <td>[garlic cloves, thai chile, salt, sugar, fish ...</td>\n","      <td>[garlic clove, thai chile, salt, sugar, fish s...</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6785</th>\n","      <td>496</td>\n","      <td>Pad-Thai-French-Fries-984208</td>\n","      <td>Pad Thai French Fries</td>\n","      <td>4</td>\n","      <td>1800.0</td>\n","      <td>NaN</td>\n","      <td>Thai</td>\n","      <td>[sauce, fish sauce, cilantro, lime, peanuts, c...</td>\n","      <td>[sauce, fish sauce, cilantro, lime, peanut, cr...</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6786</th>\n","      <td>497</td>\n","      <td>Spicy-Thai-Lobster-Soup-My-Recipes</td>\n","      <td>Spicy Thai Lobster Soup</td>\n","      <td>4</td>\n","      <td>3300.0</td>\n","      <td>[Main Dishes, Soups]</td>\n","      <td>Thai</td>\n","      <td>[lobster, vegetable oil, asian, fish, lime rin...</td>\n","      <td>[lobster, vegetable oil, asian, fish, lime rin...</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5622 rows × 248 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-873bba74-7188-4fae-bb15-d642288b485d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-873bba74-7188-4fae-bb15-d642288b485d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-873bba74-7188-4fae-bb15-d642288b485d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":93}]},{"cell_type":"code","source":["\n","#calculate cosine similarity\n","yum_cos = cosine_similarity(yum_tfidf)\n","#reset index yum_ingr\n","yum_ingr2 = yum_ingr.reset_index(drop=True)\n","\n","#plot similar dishes for Fettucini Bolognese\n","idx = 3900\n","xlim = [0.91,1.0]\n","plot_similardishes(idx,xlim)\n","#plot similar dishes for chicken tikka masala\n","idx = 3315\n","xlim = [0.88,1.02]\n","plot_similardishes(idx,xlim)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"AcQ9-BJtKyA2","executionInfo":{"status":"ok","timestamp":1679861262063,"user_tz":-120,"elapsed":7114,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"a2aa2d7c-176d-4939-cf18-75122f7fb4c0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/IPython/core/events.py:88: UserWarning: Glyph 132 (\\x84) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.9/dist-packages/IPython/core/pylabtools.py:128: UserWarning: Glyph 132 (\\x84) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 1 Axes>"],"image/png":"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hgwZQqVKlVi3bh1vvfUW//73vylTpgz16tXjlVde4bTTTmP79u0MHjw46YsEyRtZK04kIiIiIiIiBdGrQM+0drr7WHePdffYxIfJiYjI4e+2LidRsmjyda0lixbmti4n5WkcZcqUoWzZsqnuu+qqqxg3bhwvv/wyjRs3pm3btowdO5ZatYLCDIUKFeLdd98lISGB0047jcsvv5y777471YR9oiJFivDkk0/ywgsvUK1aNbp3756pubKiUKFCvPnmmyxfvpwGDRpw4403MmzYsHTjSk21atWYN28ehQoV4uyzz+aUU07hxhtvpHjx4kljjRs3jm3bttGsWTN69+5N//79iY6OznLMkn2WsnC/iIiIiIiIFDxhTfapiXdtmlldd/8+fH0T0N7dL8honNjYWI+Li8vVWEVEJBAfH09MTEyOxnhvyU88MeNbfv5jJ9XKl+S2LiflWT12kbyQ3t+JmS1y94OfZJtFR0y5GBEREREREckdZvY60AE41sx+JCgLc66ZnQQkEDy7KifPKhIRkcPUP06trqS6SA4pyS4iIiIiIlLAuXufVJpfzPNARERERI5AqskuIiIiIiIiIiIiIpJNSrKLiIiIiIiIiIiIiGSTkuwiIiIiIiIiIiIiItmkJLuIiIiIiIiIiIiISDYpyS4iIiIiIiIiIiIikk1KsouIiIiIiIiIiIiIZJOS7CIiIiIiIiIiIiIi2aQku4iIiIiIiIiIiBxR5syZg5mxdevW/A7lsLZhwwbMjLi4uPwO5aimJLuIiIiIiIiIiIjkmc2bN3PLLbdQu3ZtihcvTvXq1TnnnHP48MMPMz3G6aefzqZNm6hYsWIuRnrAa6+9RkxMDCVKlOCEE07gzjvvzPSxf//9N/fccw/169enZMmSVKlShQ4dOvD666+TkJCQi1FLXimS3wGIiIiIiIiIiIhIwbBhwwZat25NmTJleOSRR2jcuDEJCQnMmjWL6667jv/+97+ZGqdYsWJUrVo1l6MNbNiwgUsvvZR//etf3HDDDfz222+sWLEiU8f+8ccftGnTht9//50HH3yQFi1aUKxYMb744guGDRtGq1atiI6OPui4PXv2UKxYsUN8JpJbtJJdRERERERERERE8sQNN9wAQFxcHBdddBEnnXQSMTExDBgwgOXLlyf1GzFiBI0aNaJ06dJUr16dq666ij/++CNpf8pyMRMmTCAqKirZXGn1mTVrFg0aNKB06dJ07NiR9evXpxuzmWFm9OvXj1q1ahEbG0u/fv0ydb533nkn69ev56uvvqJfv36ccsop1K1bl379+rF48eKkLwqio6MZOnQo/fv3p3z58lxyySUAfPnll7Rv355SpUpRvXp1rr/+ev7666+k8Xfv3s3AgQOpUqUKJUqUoGXLlnzxxRfpxvTNN99w3nnnUaZMGSpXrkyfPn345ZdfMnU+kjol2UVERERERERERCTX/e9//2P69OnceOONByXEAcqXL5/0ulChQowaNYpVq1bx2muvsXDhQm666aYcx7B7924eeeQRxo0bx/z58/njjz+47rrr0j2mevXqNG/enJtuuomdO3dmeq6EhATeeOMNLrnkEmrUqHHQ/hIlSlCiRImk7REjRnDyyScTFxfHww8/zIoVKzjrrLP4v//7P5YtW8Y777zD0qVL6d+/f9IxgwcP5s0332TcuHEsWbKEhg0bcvbZZ7Np06ZUY9q0aRPt2rWjQYMGLFy4kE8++YRt27bRvXt3la7JAZWLERERERERERERKaiWvwWzHoA/f4RyNaDTvdDoolyZas2aNbg7MTExGfYdOHBg0uvo6Ggef/xxunfvzksvvUShQtlfN7xv3z6eeeYZTjrpJAAGDRpE//79cXfMLNVjrrnmGvbs2UOLFi0466yzmDJlStIXApdddhn79+/ntddeO+i4rVu38vvvv2fqfAHat2/P4MGDk7Yvv/xyevXqxb/+9a+ktmeffZZTTz2VLVu2ULp0aZ599lleeOEFzjvvPACee+45Pv30U5555hkefPDBg+Z49tlnady4MY899lhS28SJE6lQoQJxcXG0aNEiU7FKcof9SnYzq2hmS8OfX8zsp/D1H2b2TRbHmmBmF6TSvsHMjs3CONvC39XMbHIq+6PNbKeZLTGzeDNbaGZ9sxLroWJmTcxsvpmtMrPlZtYrg/53RVzv/RGvb86F2P5hZvWzeMzQiM/A92b2TlbHOFTM7J9m9k14XWeZ2Qn5EYeIiIiIiIiISLYsfwum3Ax//gB48HvKzUF7LnD3TPf99NNP6dy5MzVq1KBMmTL06NGDPXv25LisSfHixZMS7ADVqlVjz549/P7776n2/+abbxg/fjwTJkzgySefpH79+rRr146ff/4ZgBUrVtCuXbtUj83K+QLExsYm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yonbGa1kFxERESnItJJdRERERESkgDOz14H5wElm9qOZXZnfMYmIiIgcKbSSXUREREREpIBz9z4Z7I/Oo1BEREREjjhayS4iIiIiIiIiIiIikk1KsouIiIiIiIiIiIiIZJOS7CIiIiIiIiIiIlLgTJgwgaioqEz13bBhA2ZGXFxcLkclRyIl2UVERERERERERCTP/Prrr9xwww1ER0dTvHhxqlSpQqdOnZg5c2aextGrVy/WrVuXp3PK0UkPPhUREREREREREZE807NnT3bs2MGLL75InTp12LJlC5999hm//fZbnsZRsmRJSpYsmadzytFJK9lFREREREREREQkT/zxxx/MnTuXRx99lE6dOnHCCSfQvHlzBg0aRO/evQGIjo5m6NChXHrppURFRVG1alWGDx+ebJwRI0bQqFEjSpcuTfXq1bnqqqv4448/kvYnloKZNWsWDRo0oHTp0nTs2JH169cf1CfRDz/8QPfu3alQoQKlSpXi5JNP5o033kg278aNG+ncuTOlSpWifv36eb76Xg5PSrKLiIiIiIiIiIhInoiKiiIqKooPPviAXbt2pdlvxIgRxMTEsHjxYu6//37uvPNO3nnnnaT9hQoVYtSoUaxatYrXXnuNhQsXctNNNyUbY/fu3TzyyCOMGzeO+fPn88cff3DdddelOecNN9zAjh07mD17NqtWrWLUqFGUL18+WZ+77rqLm2++mWXLltG8eXN69+7Ntm3bsncx5KihcjEiIiIiIiIiIiIF1LR10xi9eDS/bP+FqqWrckvTWzjvxPNybb4iRYowYcIErr76asaOHcupp55K69atufDCCznttNOS+p122mncddddANSrV4+vv/6aESNG0KNHDwAGDhyY1Dc6OprHH3+c7t2789JLL1GoULCueN++fTzzzDOcdNJJAAwaNIj+/fvj7pjZQbFt3LiRnj170rhxYwBq1ap1UJ9bb72Vbt26AfDwww8zceJEli5dSps2bQ7B1ZEjlVayi4iIiIiIiIiIFEDT1k1j6JdD2bR9E46zafsmhn45lGnrpuXqvD179uTnn39mypQpnHPOOXz55Ze0bNmShx9+OKlPq1atkh3TqlUrvvnmm6TtTz/9lM6dO1OjRg3KlClDjx492LNnD7/88ktSn+LFiycl2AGqVavGnj17+P3331ON65ZbbuHBBx+kVatW3H33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IYsXL2bIkCEMHjyY+fPn5+yCyGFNSXYREREREREREZEC6s8pU/j+jE7Ex9Tn+zM68eeUKXky7/Tp04mKikr2065du6T9RYsW5YEHHqB58+ZER0dz0UUXcd111/H6668n9Wnfvj2zZ88GgoT6BRdcQMWKFfn6668B+Oyzz5Il2e+55x5at25NdHQ05557LnfeeWey8TLSuHFjrrvuOho2bEidOnW46667aNq0KZMnT07W76yzzmLAgAHUqVOHm266iTp16jBr1qzsXCY5Qqgmu4iIiIiIiIiISAH055QpbLrnXjwsmbLv55/ZdM+9AJTr1i1X527Xrh1jx45N1rZy5UrOP//8pO3nnnuOF154gY0bN7Jz50727t3LCSeckLS/Q4cOjBw5EgiS7DfffDM7d+5kzpw5VKpUiR9//DFZkn3y5MmMGjWKNWvWsG3bNvbv38/+/fszHfP27du5//77mTp1Kps2bWLv3r3s2rWLRo0aJeuXcrtatWps2bIl0/PIkUcr2UVERERERERERAqgLSNHJSXYE/muXWwZOSrX5y5VqhR16tRJ9lOjRo2k/W+++SYDBw6kb9++zJgxg6VLl3LDDTewZ8+epD4dOnTgu+++Y82aNcTFxdGhQwc6dOjA7NmzmTNnDrVr104ac8GCBfTu3ZsuXbowZcoUlixZwoMPPsjevXszHfOgQYOYNGkSw4YN47PPPmPp0qW0aNEiWUwQrMKPZGZJteTl6KSV7CIiIiIiIiIiIgXQvk2bstSel7744gtOO+00BgwYkNS2du3aZH0S67I/9NBD1K5dm8qVK9OhQwduvPFGjjnmmGSr2OfNm0f16tW55557kto2btyY5Zguv/xyevbsCcCuXbtYu3Yt9erVy8YZytFEK9lFREREREREREQKoCLHHZel9rxUr149Fi9ezEcffcT333+ftHo8pfbt2/PKK6/QsWNHAKKjo6lUqRLvvPNOsiR7vXr1+Omnn3j11VdZt24dzz77bJbqsSeO8e6777J48WJWrFjBpZdeyq4UdwJIwaQku4iIiIiIiIiISAFU+daBWIkSydqsRAkq3zowfwKKcO2113LRRRdx8cUX07x5czZs2MC//vWvg/p16NCBffv2JUuop9bWrVs3brvtNgYOHEijRo2YOXMmDzzwQJZiGjFiBJUrV6Zt27acc845tGzZkrZt22b3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9pmZNc/vgERE5OixefNmbr31VurWrUuJEiWoXLkyp59+Ok899RTbth02xRhEMsXcM1PSWuToZ2ZfAF3d/Y/8jiW/hV/U7A/LzLQCns1EXfsjVni+nwFt3H1ffscjIiIikh/CcnpTE2uyhwsuZgM3A80Jymqe6Kn8I9LMriG4k5eaNWs227gx1RtyRUTkEIuPjycmJia/w8iyDRs20Lp1a8qWLct9991Ho0aNKFmyJKtWreKFF17goosu4uKLLz7ouD179lCsWM7Xgc6ZM4eOHTvy66+/cuyxx+Z4PDm8pfd3YmaL3D0rzwJN1RG3kl0kF/0LqJnfQRwmahI83HQZ8CRwdT7Hk9tqArcrwS4iIiKSzI/AO+HdiQsJHlifaibC3ce6e6y7x1aqVClPgxQRkSPP9ddfT6FChYiLi6N3797Ur1+fWrVq0bVrV9577z369OkDgJnxzDPP0KNHD0qXLs2dd94JwJQpU2jWrBklSpSgVq1a3HXXXezZk1SQgj179jBkyBBq1KhBqVKlaN68OTNmpKwKfcDu3bs5//zzadq0KVu2qDqaZN2R+OBTkVzh7l/ldwyHC3f/nuDBvQVCeL7f53ccIiIiIoeZ9whK6s02s3pAMZKXGBQREcmy3377jRkzZvDwww9TunTpVPuEj9wD4P777+fhhx9m+PDhmBkzZszgkksuYfTo0bRr147//ve/XHfddezevZvhw4cD0K9fP9auXctrr71GjRo1+PDDD+nWrRtff/01jRs3TjbXX3/9Rffu3UlISGDOnDmULVs2905ejlpKsouIiIiIiBRwZvY6wTOKjjWzH4H7CJ6FNS4sG7MHuCK1UjEiInJk++6rX5j//lq2/W83URWK06p7beqdVjXX5luzZg3uzkknnZSsvUaNGvzxxx8AXHrppTz33HMA9OrVi6uuuiqp3xVXXMFtt91Gv379AKhduzaPPfYYl156KU888QTr1q3j9ddfZ8OGDdSsGRQsGDBgAJ988gn/+c9/GDNmTNJYW7Zs4bLLLqN69eq89dZblChRItfOW45uSrKLiIiIiIgUcO7eJ41dl+ZpICIikqe+++oXZr+6mn17EgDY9r/dzH51NUCuJtpTM3fuXPbv388111zDrl27ktpjY5OXy160aBELFy7kscceS2pLSEhg586d/PLLLyxevBh3p379+smO2717N2eccUayti5dutC0aVPefvttihRRmlSyT58eERERERERERGRAmj++2uTEuyJ9u1JYP77a3MtyV6nTh3MjNWrVydrr1WrFgClSpVK1p6ypExCQgL33XcfF1544UFjV6pUiYSEBMyMr7/+mqJFiybbX7JkyWTbXbt25a233mLlypU0adIku6ckoiS7iIiIiIiIiIhIQbTtf7uz1H4oVKxYkbPOOounn36am266iaioqCwd37RpU1avXk2dOnVS3X/qqafi7vzyyy907Ngx3bGGDRtGhQoV6NSpE7NmzVKiXbJNSXYREREREREREZECKKpC8VQT6lEViufqvGPGjKF169Y0a9aMoUOH0rhxY4oUKcKiRYtYtmwZZ511VprH3nvvvXTt2pUTTjiBiy66iCJFirBy5UoWLlzI448/Tr169bjkkkvo27cv//73v2natCn/+9//mDNnDieeeCI9evRINt5DDz2Eu3PmmWcya9asgx6MKpIZSrKLiIiIiIiIiIgUQK26105Wkx2gSLFCtOpeO1fnPfHEE1myZAmPPPII99xzDz/88ANFixYlJiaGG264gQEDBqR5bJcuXZg2bRrDhg1j+PDhFClShHr16tG3b9+kPuPHj+ehhx5i8ODB/Pjjj1SoUIEWLVqkubL94Ycfxt2TVrQr0S5ZZXo4vIiIiIiIiBwqsbGxHhcXl99hiIgUCPHx8cTExORojO+++oX5769l2/92E1WhOK26187zh56K5Kb0/k7MbJG7x6a6Mwu0kl1ERERERERERKSAqndaVSXVRXKoUH4HICIiIiIiIiIiIiJypFKSXUREREREREREREQkm5RkFxERERERERERERHJJiXZRURERERERERERESySUl2EREREREREREREZFsUpJdRERERERERERERCSblGQXEREREREREREREcmmfEmym1lVM3vDzNaa2SIz+9DM6plZBzObmsYxL5hZ/XTGHGpmgw5xnH3N7OlDNNYGMzs2P+YWERERERERERERkdyR50l2MzPgXWCOu9d292bAHUCV9I5z96vc/Zu8iFFERERERERERESOPtHR0QwfPjy/wzji9O3bl65du+Z3GAfp2rUrffv2ze8w8mUle0dgr7s/l9jg7svcfW64GWVmk81stZm9GiblMbM5ZhYbvj7bzBab2TIzm5VyAjO72sw+MrOSZnapmS00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DBkyhCVLllC+fHn69OnDTTfdxEMPPcTChQvZtWsXN998c1L/GTNmcMkllzBgwABWrVrFuHHjmDx5MnfeeWeycUeMGMHJJ59MXFwcDz/88EGxbd++nfbt27Nhwwbee+89VqxYwb333pu0f9u2bZxzzjnMnDmTZcuW0bNnT3r06MHq1auTjTNy5EgaNmzI4sWLGTJkCIMHD2b+/PmH4vLJYcjcPb9jEBERERERkaNEbGysx8XF5XcYIiIFQnx8PDExMTkaY9Mv77Nu7XB27d5EieLHcWLtQRxXtfshijB1HTp0oGvXrgwaNAh3p1atWgwfPpwLLriADRs2UKtWLZ577jmuvfZaAKZOnUq3bt14++236dGjBwATJkxgwIABbNu2DYB27drRuXNn7rnnnqR53nvvPS699FL+/vtvzIzo6GgaNmzIlClTksUT+eDT559/nn/+85+sX7+eY489NlPn07JlS7p27crdd98NBCvZW7Vqxeuvv57Up27dulxxxRVJfSTvpPd3YmaL3D02p3NoJbuIiIiIiIiIiEgBtOmX91m9+i527f4ZcHbt/pnVq+9i0y/v59qca9as4YsvvuDiiy8GggT3JZdckqxkDECjRo2SXlepUgWAhg0bJmvbvn07O3bsAGDRokU89NBDREVFJf1cfPHFbN++nV9++SXpuNjY9POpS5YsoVGjRmkm2Ldv387gwYOpX78+xxxzDFFRUcTFxfHf//43zfgBqlWrxpYtW9KdW45cRfI7ABEREREREREREcl769YOJyFhZ7K2hISdrFs7PNdWs7/wwgvs37+fmjVrJrUlVtr44YcfktqKFi2a9NrM0mxLSEhI+n3fffdx4YUXHjRnpUqVkl6XLl06R/EPGjSI6dOnM3z4cOrWrUupUqW4/PLLk9V+TxlrYryJscrRR0l2ERERERERERGRAmjX7k1Zas+pffv28dJLL/HII4/QtWvXZPsuu+wyxo8fz+WXX56tsZs2bcrq1aupU6dOjmI89dRTefnll9m6dWuqq9m/+OILLr/8cnr27AnArl27WLt2LfXq1cvRvHJkU7kYERERERERERGRAqhE8eOy1J5T06ZNY+vWrVx99dU0aNAg2U/v3r0ZP3482X1+5L333strr73Gvffey8qVK1m9ejWTJ09m8ODBWRrn4osvpnLlynTv3p25c+eybt06Pvjg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\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["yum_ingr2['clean ingredients'][3900]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0NDXJaC1Y9OA","executionInfo":{"status":"ok","timestamp":1679861379457,"user_tz":-120,"elapsed":204,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"aa2f3111-3453-489c-9d4d-c32857f0db07"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['rice vinegar',\n"," 'light mayonnaise',\n"," 'tahini',\n"," 'wasabi',\n"," 'sugar',\n"," 'tomato',\n"," 'sesame seed',\n"," 'scallion']"]},"metadata":{},"execution_count":98}]},{"cell_type":"code","source":["yum_ingr2['clean ingredients'][4024]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-wYbgMXsivmB","executionInfo":{"status":"ok","timestamp":1679861427549,"user_tz":-120,"elapsed":206,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"19c595ff-7852-4a7d-8172-7560780438e4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['wild rice',\n"," 'cold water',\n"," 'sea salt',\n"," 'olive oil',\n"," 'red wine vinegar',\n"," 'sun dried tomato',\n"," 'sliced kalamata olive',\n"," 'chopped parsley']"]},"metadata":{},"execution_count":100}]},{"cell_type":"code","source":["yum_ingr2['clean ingredients'][1190]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k_pz-nEcjJqS","executionInfo":{"status":"ok","timestamp":1679861535028,"user_tz":-120,"elapsed":292,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"8a313af1-8412-41c3-981e-8eda1ec264f1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['bulk italian sausag',\n"," 'onion',\n"," 'oil',\n"," 'green bell pepper',\n"," 'red bell pepper',\n"," 'fresh tomato',\n"," 'shrimp',\n"," 'creole seasoning',\n"," 'salt',\n"," 'pepper',\n"," 'cooked rice']"]},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["finddishes(idx=3900)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E6tP9StIVRwe","executionInfo":{"status":"ok","timestamp":1679861409707,"user_tz":-120,"elapsed":217,"user":{"displayName":"Aiza AVILA CAÑIBE","userId":"05794050573055371907"}},"outputId":"920722de-f989-4028-ceac-b3c2c346b4c6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Dishes similar to Momotaro (Japanese Tomato Salad) (Japanese)\n","Mediterranean Wild Rice with Olives and Tomatoes (Mediterranean) (ID:4024)\n","Shrimp Creole with Italian Sausage (Cajun & Creole) (ID:1190)\n","Spanish Rice One Pot (Spanish) (ID:4888)\n","Spamâ¢ and Napa Cabbage (Hawaiian) (ID:2640)\n","Cajun Chicken One Pot Bake (Cajun & Creole) (ID:1114)\n","Mediterranean Farro salad (Mediterranean) (ID:4026)\n","Cajun-Seasoned Vegetarian Gumbo (Cajun & Creole) (ID:1034)\n","Fully Loaded Jambalaya with Andouille Sausage (Cajun & Creole) (ID:1005)\n","Fully Loaded Jambalaya with Andouille Sausage (Cajun & Creole) (ID:987)\n","Farmily-Sized Creole Chicken and Rice (Cajun & Creole) (ID:1258)\n","Greek Spinach and Rice recipe (Spanakorizo) (Greek) (ID:2256)\n","Mediterranean Quinoa Chickpea Salad (Mediterranean) (ID:3962)\n","Buttermilk Marinated Fried Green Tomatoes (Southern & Soul Food) (ID:4638)\n","Thakkali Dosa - 2, Tomato Dosa - 2 (Indian) (ID:3110)\n","South Indian Fish Curry Recipe-Recipe for Fish Curry (Indian) (ID:3108)\n","HOMEMADE SPAGHETTI SAUCE (Italian Sausage Marinara) (Italian) (ID:3663)\n","Chicken Jambalaya (American) (ID:1066)\n","Cuban Beans and Rice (Cuban) (ID:1599)\n","Louisiana Crawfish Etouffee (Southern & Soul Food) (ID:1309)\n","Baked Fried Green Tomatoes (Southern & Soul Food) (ID:4640)\n"]}]},{"cell_type":"markdown","source":["# Anotaciones:\n","\n","\n","\n","1.   Mejorar la limpieza de los ingredientes, hay unas cosas raras como esta \"Spamâ¢ and Napa Cabbage\" y algunos vacíos\n","2.   Elemento de la lista\n","\n"],"metadata":{"id":"EBAtLmVBjs0e"}}]}